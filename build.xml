<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" >

  <PropertyGroup>
    <SolutionRoot>$(MSBuildProjectDirectory)\</SolutionRoot>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\tools\msbuild\MSBuildCommunityTasks\</MSBuildCommunityTasksPath>
  </PropertyGroup>
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">Any CPU</Platform>
    <MajorVersion>1</MajorVersion>
    <MinorVersion>0</MinorVersion>
    <!-- This gets set by the build server -->
    <BuildVersion>0</BuildVersion>
    <FullVersion>$(MajorVersion).$(MinorVersion).$(BuildVersion)</FullVersion>

    <!-- This should get set by the build server -->
    <API_KEY>should_be_set_by_buildserver</API_KEY>
    <APPMETRICS_ACCESS_KEY>should_be_set_by_buildserver</APPMETRICS_ACCESS_KEY>
  </PropertyGroup>

  <Choose>
    <When Condition=" '$(OutDir)'=='' ">
      <PropertyGroup>
        <TargetDir>$(MSBuildProjectDirectory)\_bin\$(Configuration)\</TargetDir>
        <UpdatePackageDir>$(MSBuildProjectDirectory)\_UpdatePackage\</UpdatePackageDir>
        <SetupDir>$(MSBuildProjectDirectory)\_setup\</SetupDir>
        <WebPackageDir>$(MSBuildProjectDirectory)\_WebPackage\</WebPackageDir>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <TargetDir>$(OutDir)\</TargetDir>
        <UpdatePackageDir>$(OutDir)\_UpdatePackage\</UpdatePackageDir>
        <SetupDir>$(OutDir)\</SetupDir>
        <WebPackageDir>$(OutDir)\_WebPackage\</WebPackageDir>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Target Name="UpdateVersion" >
    <Message Text="Updating version to $(FullVersion)" />

    <!-- Remove read-only attribute -->
    <ItemGroup>
      <AllCodeFiles Include="$(SolutionRoot)\**\*.*" />
    </ItemGroup>
    <Attrib ReadOnly="false" Files="@(AllCodeFiles)" />

    <!-- Update assembly version number using build number -->
    <FileUpdate
        Files="$(MSBuildProjectDirectory)\LatencyCollectorCore\Properties\AssemblyInfo.cs"
        Regex="AssemblyVersion\(&quot;.*&quot;\)"
        ReplacementText="AssemblyVersion(&quot;$(FullVersion)&quot;)" />

    <ItemGroup>
      <MonitorFiles Include="$(MSBuildProjectDirectory)\LatencyCollectorCore\Monitors\*.cs" />
    </ItemGroup>
    <FileUpdate
        Files="@(MonitorFiles)"
        Regex="{API_KEY}"
        ReplacementText="$(API_KEY)" />

    <ItemGroup>
      <AllFiles Include="$(MSBuildProjectDirectory)\LatencyCollectorCore\**\*.cs" />
    </ItemGroup>
    <FileUpdate
        Files="@(AllFiles)"
        Regex="{APPMETRICS_ACCESS_KEY}"
        ReplacementText="$(APPMETRICS_ACCESS_KEY)" />

  </Target>

  <Target Name="Build" DependsOnTargets="UpdateVersion" >
    <MSBuild Projects="$(MSBuildProjectDirectory)\CiapiLatencyCollector.sln" Targets="Rebuild"
      Properties="Configuration=$(Configuration)" />

    <CallTarget Targets="ZipUpdatePackage;" />
  </Target>

  <Target Name="ZipUpdatePackage">
    
    <!-- Store version number for auto update -->
    <WriteLinesToFile File="$(TargetDir)\version.txt" Lines="$(FullVersion)" Overwrite="true" />

    <!-- All files from build -->
    <ItemGroup>
      <ZipFiles Include="$(TargetDir)\**\*.*"
          Exclude="$(TargetDir)\**\*.zip;$(TargetDir)\**\*.pdb;$(TargetDir)\**\*.xml;
            $(TargetDir)\**\*.vshost.exe;$(TargetDir)\**\*.vshost.exe.*;
            $(TargetDir)\**\CiapiLatencyCollector.*;$(TargetDir)\**\Ionic.Zip.dll" />
    </ItemGroup>

    <Zip Files="@(ZipFiles)"
      WorkingDirectory="$(TargetDir)"
      ZipFileName="$(TargetDir)\LatencyCollectorCore.zip"
      ZipLevel="9" />
    
    <Copy SourceFiles="$(TargetDir)\LatencyCollectorCore.zip" DestinationFolder="$(UpdatePackageDir)\" />
    <Copy SourceFiles="$(TargetDir)\version.txt" DestinationFolder="$(UpdatePackageDir)\" />
  
  </Target>

</Project>
