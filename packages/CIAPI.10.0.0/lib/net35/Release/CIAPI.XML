<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CIAPI</name>
    </assembly>
    <members>
        <member name="T:CIAPI.DTO.ApiChangePasswordRequestDTO">
            <summary>
            Request to change a user's password.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiChangePasswordRequestDTO.UserName">
            <summary>
            The username of the user whose password is to be changed *(case sensitive)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiChangePasswordRequestDTO.Password">
            <summary>
            The user's existing password *(case sensitive)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiChangePasswordRequestDTO.NewPassword">
            <summary>
            The user's new password *(case sensitive)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSaveAccountInformationRequestDTO">
            <summary>
            Request to change account information.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSaveAccountInformationRequestDTO.PersonalEmailAddress">
            <summary>
            The personal email address for the user.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSaveAccountInformationRequestDTO.PersonalEmailAddressIsDirty">
            <summary>
            Setting to indicate if the personal email value has changed.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.AccountInformationResponseDTO">
            <summary>
            Response from an account information query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.CFDAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.SpreadBettingAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.LogonUserName">
            <summary>
            Logon user name.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.ClientAccountId">
            <summary>
            Client account ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.ClientAccountCurrency">
            <summary>
            Base currency of the client account.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.AccountOperatorId">
            <summary>
            Account Operator ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.TradingAccounts">
            <summary>
            A list of trading accounts.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.PersonalEmailAddress">
            <summary>
            The user's personal email address.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.AccountInformationResponseDTO.HasMultipleEmailAddresses">
            <summary>
            Flag indicating whether the user has more than one email address configured.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiActiveStopLimitOrderDTO">
            <summary>
            A stop or limit order that is currently active.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.OrderId">
            <summary>
            The order's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.ParentOrderId">
            <summary>
            This represents the OrderID of any orders that the current order is related to. If there is no parent order as the order in question *is* the parent order, then the value is null.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.MarketId">
            <summary>
            The markets unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.MarketName">
            <summary>
            The market's name.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Direction">
            <summary>
            The direction, buy or sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Quantity">
            <summary>
            The quantity of the product.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.TriggerPrice">
            <summary>
            The marked to market price at which the order will trigger at.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.TradingAccountId">
            <summary>
            The trading account that the order is on.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Type">
            <summary>
            The type of order, i.e. stop or limit.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Applicability">
            <summary>
            When the order applies until. i.e. good till cancelled (GTC) good for day (GFD) or good till time (GTT).
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.ExpiryDateTimeUTC">
            <summary>
            The associated expiry DateTime.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Currency">
            <summary>
            The trade currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Status">
            <summary>
            The order status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.StopOrder">
            <summary>
            The if / done stop order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.LimitOrder">
            <summary>
            The if / done limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.OcoOrder">
            <summary>
            The order on the other side of a One Cancels the Other relationship.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.LastChangedDateTimeUTC">
            <summary>
            Represents the date and time when the trade/order was last edited. **Note:** does not include things such as the current market price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveStopLimitOrderDTO.Applicability_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiBasicStopLimitOrderDTO">
            <summary>
            A stop or limit order with a limited number of data fields.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiBasicStopLimitOrderDTO.Guaranteed">
            <summary>
            Flag indicating if the stop order is a guaranteed order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiBasicStopLimitOrderDTO.OrderId">
            <summary>
            The order's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiBasicStopLimitOrderDTO.TriggerPrice">
            <summary>
            The order's trigger price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiBasicStopLimitOrderDTO.Quantity">
            <summary>
            The quantity of the product.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiChangePasswordResponseDTO">
            <summary>
            Response to a change password request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiChangePasswordResponseDTO.IsPasswordChanged">
            <summary>
            Flag indicating whether the password change request was successful.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiClientAccountWatchlistDTO">
            <summary>
            Client account watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistDTO.WatchlistId">
            <summary>
            The ID of the Watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistDTO.WatchlistDescription">
            <summary>
            Watchlist description.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistDTO.DisplayOrder">
            <summary>
            Watchlist display order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistDTO.Items">
            <summary>
            Watchlist items.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiClientAccountWatchlistItemDTO">
            <summary>
            API watchlist item.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistItemDTO.WatchlistId">
            <summary>
            ID of the parent watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistItemDTO.MarketId">
            <summary>
            Watchlist item market ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientAccountWatchlistItemDTO.DisplayOrder">
            <summary>
            Watchlist item display order.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiClientApplicationMessageTranslationDTO">
            <summary>
            Message translation entity with client specific translated text strings.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationDTO.Key">
            <summary>
            Translation key.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationDTO.Value">
            <summary>
            Translation value.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO">
            <summary>
            A request to update a stop/limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO.ClientApplicationId">
            <summary>
            Client Id of requesting user.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO.CultureId">
            <summary>
            Culture Id of requesting user.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO.AccountOperatorId">
            <summary>
            Account Operator ID of requesting user
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO.InterestedTranslationKeys">
            <summary>
            A list of interesting keys to get translations for
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiClientApplicationMessageTranslationResponseDTO">
            <summary>
            Gives a list of client application specific message translations.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiClientApplicationMessageTranslationResponseDTO.TranslationKeyValuePairs">
            <summary>
            List of message translations *(key/value pairs)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiCultureLookupDTO">
            <summary>
            Lookup data specific to a Culture.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiLookupDTO">
            <summary>
            Generic look up data entities - such as localised text names.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.Id">
            <summary>
            The lookup ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.Description">
            <summary>
            Lookup items description.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.DisplayOrder">
            <summary>
            The order to display the items on a user interface.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.TranslationTextId">
            <summary>
            Translation text ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.TranslationText">
            <summary>
            Translated text.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.IsActive">
            <summary>
            Is active flag.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupDTO.IsAllowed">
            <summary>
            Is allowed flag.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiCultureLookupDTO.Code">
            <summary>
            Two letter ISO 639 culture code followed by a two letter uppercase ISO 3166 culture code.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiDateTimeOffsetDTO">
            <summary>
            Contains DateTime represented as UTC time and time zone offset in minutes to convert back to local time.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiDateTimeOffsetDTO.UtcDateTime">
            <summary>
            Gets the date and time in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiDateTimeOffsetDTO.OffsetMinutes">
            <summary>
            Gets the time's offset from Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiDeleteWatchlistRequestDTO">
            <summary>
            Request to delete a watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiDeleteWatchlistRequestDTO.WatchlistId">
            <summary>
            The ID of the watchlist to delete.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiDeleteWatchlistResponseDTO">
            <summary>
            Response from a request to delete a watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiDeleteWatchlistResponseDTO.Deleted">
            <summary>
            Flag confirming whether the watchlist was deleted.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiErrorResponseDTO">
            <summary>
            The response to an error condition.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiErrorResponseDTO.HttpStatus">
            <summary>
            The intended HTTP status code. This will be the same value as the actual HTTP status code unless the QueryString contains *only200=true*. This is useful for JavaScript clients who can only read responses with status code 200.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiErrorResponseDTO.ErrorMessage">
            <summary>
            This is a description of the ErrorMessage property.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiErrorResponseDTO.ErrorCode">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiIfDoneDTO">
            <summary>
            Contains the If/Done stop and limit orders. An If/Done order is comprised of two separate orders linked together and requested as a single order. When the first order is executed, the second order becomes an active order. For example, attaching a stop/limit to a trade or order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiIfDoneDTO.Stop">
            <summary>
            The price at which the stop order will be filled.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiIfDoneDTO.Limit">
            <summary>
            The price at which the limit order will be filled.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiIfDoneResponseDTO">
            <summary>
            Response to an If/Done order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiIfDoneResponseDTO.Stop">
            <summary>
            The Stop order response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiIfDoneResponseDTO.Limit">
            <summary>
            The Limit order response.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiLogOffRequestDTO">
            <summary>
            Request to delete a session *(log off)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOffRequestDTO.UserName">
            <summary>
            User name of the session to delete *(log off)*. This is case sensitive.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOffRequestDTO.Session">
            <summary>
            Session identifier *(session token)* to delete *(log off)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiLogOffResponseDTO">
            <summary>
            Response from a session delete *(Log Out)* request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOffResponseDTO.LoggedOut">
            <summary>
            Flag indicating the Log Out status.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiLogOnRequestDTO">
            <summary>
            Request to create a session *(log on)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnRequestDTO.UserName">
            <summary>
            Username is case sensitive.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnRequestDTO.Password">
            <summary>
            Password is case sensitive.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnRequestDTO.AppKey">
            <summary>
            A unique key to identify the client application.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnRequestDTO.AppVersion">
            <summary>
            The version of the client application.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnRequestDTO.AppComments">
            <summary>
            Any client application comments on what to associate with this session. *(Optional)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiLogOnResponseDTO">
            <summary>
            Response to a [LogOn](http://labs.cityindex.com/docs/Content/HTTP%20Services/LogOn.htm) call.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnResponseDTO.Session">
            <summary>
            Your session token *(treat as a random string)*. Session tokens are valid for a set period from the time of their creation. The period is subject to change, and may vary depending on who you logon as.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnResponseDTO.PasswordChangeRequired">
            <summary>
            Flag used to indicate whether a password change is needed.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLogOnResponseDTO.AllowedAccountOperator">
            <summary>
            Flag used to indicate whether the account operator associated with this user is allowed to access the application.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiLookupResponseDTO">
            <summary>
            Gets the lookup entities from trading database given the lookup name and culture ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupResponseDTO.CultureId">
            <summary>
            The requested culture ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupResponseDTO.LookupEntityName">
            <summary>
            The requested lookup name.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupResponseDTO.ApiLookupDTOList">
            <summary>
            List of lookup entities from the database.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiLookupResponseDTO.ApiCultureLookupDTOList">
            <summary>
            List of entities each containing data specific to a culture.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiMarketDTO">
            <summary>
            Basic information about a Market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketDTO.MarketId">
            <summary>
            A market's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketDTO.Name">
            <summary>
            The market name.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiMarketEodDTO">
            <summary>
            Market end of day (EOD) information.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketEodDTO.MarketEodUnit">
            <summary>
            Unit.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketEodDTO.MarketEodAmount">
            <summary>
            End of day amount.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiMarketInformationDTO">
            <summary>
            Contains market information.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketId">
            <summary>
            The ID of the market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.Name">
            <summary>
            The market name.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.ExchangeId">
            <summary>
            Unique identifier for the exchange where the underlying is traded.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.ExchangeName">
            <summary>
            The name of the exchange where the underlying is traded.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarginFactor">
            <summary>
            Margin factor, expressed as points or as a percentage.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MinMarginFactor">
            <summary>
            The minimum margin factor.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarginFactorUnits">
            <summary>
            Controls if the margin factor is displayed as a percentage or in points. *(Percentage=26, and Points=27)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MaxMarginFactor">
            <summary>
            The maximum margin factor.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketType">
            <summary>
            Description of the market type. This can be 'OptionMarket', 'Ordinary Market', or 'BinaryMarket'.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketTypeId">
            <summary>
            Identifier for each of the market types. *(Option=1, Ordinary=2 and Binary=4)*. 
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MinDistance">
            <summary>
            The minimum distance from the current price you can place an order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MinDistanceUnits">
            <summary>
            The minimum distance unit type. This can be: *(Percentage=26, Points=27)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.OptionType">
            <summary>
            Indicates if the option is a Call or a Put option.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.OptionTypeId">
            <summary>
            ID number indicating the option type: *Put=1* and *Call=2*. This value is null for non-option markets.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.StrikePrice">
            <summary>
            The strike price of the option. This value is null for non-option markets.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.WebMinSize">
            <summary>
            The minimum quantity that can be traded over the web.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MaxSize">
            <summary>
            The max size of an order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.Market24H">
            <summary>
            Flag indicating whether the market is a 24 hour market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.PriceDecimalPlaces">
            <summary>
            The number of decimal places in the market's price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.DefaultQuoteLength">
            <summary>
            Default quote length.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.TradeOnWeb">
            <summary>
            Flag indicating whether you can trade this market on the web.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.LimitUp">
            <summary>
            New sell orders will be rejected. Orders resulting in a short open position will be red carded.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.LimitDown">
            <summary>
            New buy orders will be rejected. Orders resulting in a long open position will be red carded.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.LongPositionOnly">
            <summary>
            Cannot open a short position. Equivalent to limit up.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.CloseOnly">
            <summary>
            Can only close open positions. Equivalent to both Limit up and Limit down.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketEod">
            <summary>
            List of market end of day DTOs.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.PriceTolerance">
            <summary>
            Setting to indicate the user's price tolerance for the given market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.ConvertPriceToPipsMultiplier">
            <summary>
            Multiplier used to calculate the significance of the price tolerance to the appropriate decimal place.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketSettingsTypeId">
            <summary>
            The ID type of the market setting. *(Spread=1, CFD=2, Binary=3, FX=4, Cash=5, All=6)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketSettingsType">
            <summary>
            The type of the market setting, i.e. Spread, CFD.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MobileShortName">
            <summary>
            A short summary of the market name used when presenting the market name on mobile clients.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.CentralClearingType">
            <summary>
            The method used for central clearing, i.e. "No" or "LCH".
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.CentralClearingTypeDescription">
            <summary>
            The description of the method used for central clearing, i.e. "None" or "London Clearing House".
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketCurrencyId">
            <summary>
            The currency of the market being traded.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.PhoneMinSize">
            <summary>
            The minimum quantity that can be traded over the Phone.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.DailyFinancingAppliedAtUtc">
            <summary>
            Daily financing amount to be applied at specified time in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.NextMarketEodTimeUtc">
            <summary>
            Next Date and Time at which the End of Day (EOD) capture will run in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.TradingStartTimeUtc">
            <summary>
            Market Trading start time on each trading day represented in UTC and local time.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.TradingEndTimeUtc">
            <summary>
            Market Trading end time on each trading day represented in UTC and local time.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketPricingTimes">
            <summary>
            Market Pricing times on given set of working days.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketBreakTimes">
            <summary>
            Breaks throughout each trading day *(Day is specified as 'DayOfWeek')*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketSpreads">
            <summary>
            Market spreads during each trading day.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.GuaranteedOrderPremium">
            <summary>
            The premium paid for a guaranteed order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.GuaranteedOrderPremiumUnits">
            <summary>
            The unit type being used for the guaranteed order premium. This can be *(MultipleOfQuantity=1, PercentOfConsideration=2)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.GuaranteedOrderMinDistance">
            <summary>
            The minimum distance from current market price at which a guaranteed order can be placed.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.GuaranteedOrderMinDistanceUnits">
            <summary>
            Guaranteed order minimum distance unit type. This can be: *(Percentage=26, Points=27)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.PriceToleranceUnits">
            <summary>
            Price tolerance units - used with Price Tolerance as a multiplier *(i.e. BetPer or Override Bet Per)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketTimeZoneOffsetMinutes">
            <summary>
            Offset minutes to convert UTC times to local times.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.QuantityConversionFactor">
            <summary>
            The number of units for an instrument per actual traded units.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.PointFactorDivisor">
            <summary>
            The number of cents which make up a dollar trade on the exchange.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.BetPer">
            <summary>
            Bet Per value for CFD and Spread Bet markets.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketUnderlyingTypeId">
            <summary>
            Reflects the market underlying type ID of the associated market. <ul> <li>Equity=1</li> <li>Index=2</li> <li>Bond=3</li> <li>FX=4</li> <li>Commodity=5</li> <li>Interest Rate=6</li> <li>Metals=7</li> <li>Equity - Common Stock=8</li> <li>Equity - ADS=9</li> <li>Binary=10</li> <li>Sectors=11</li> <li>FX Hedge=12</li> </ul>
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.MarketUnderlyingType">
            <summary>
            Reflects the market underlying type description of the associated market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.AllowGuaranteedOrders">
            <summary>
            Flag indicating whether guaranteed orders are allowed.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.OrdersAwareMargining">
            <summary>
            Flag to indicate if stop orders are allowed for inclusion in margin calculation.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.OrdersAwareMarginingMinimum">
            <summary>
            The minimum for orders aware margining.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.CommissionChargeMinimum">
            <summary>
            The minimum commission charged on trade/order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.CommissionRate">
            <summary>
            The commission rate charged on trade/order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.CommissionRateUnits">
            <summary>
            The unit type for the commission rate charged on a trade/order. This can be: <ul> <li>Minimum commission for equities - 11</li> <li>Equities commission rate in basis points - 12</li> <li>Commission for indices - 17</li> <li>Equities commission rate in Cents Per Share - 23</li> </ul>
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.ExpiryUtc">
            <summary>
            Expiry of the market in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.StepMargin">
            <summary>
            Step margin data for this market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.FutureRolloverUTC">
            <summary>
            The date and time in UTC for the future rollover of the market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.AllowRollover">
            <summary>
            Flag to indicate if auto-rollover on the market is allowed.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.ExpiryBasisId">
            <summary>
            The expiry basis ID of the market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationDTO.ExpiryBasisText">
            <summary>
            The expiry basis text of the market.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiMarketInformationSaveDTO">
            <summary>
            Contains market information to be modified and saved.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationSaveDTO.MarketId">
            <summary>
            The ID of the market to be modified.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationSaveDTO.PriceTolerance">
            <summary>
            Setting to indicate the user's price tolerance for the given market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationSaveDTO.PriceToleranceIsDirty">
            <summary>
            Flag to indicate if the price tolerance value has changed.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationSaveDTO.MarginFactor">
            <summary>
            The user's margin factor for the given market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketInformationSaveDTO.MarginFactorIsDirty">
            <summary>
            Flag to indicate if the margin factor value has changed.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiMarketSpreadDTO">
            <summary>
            Contains market spread value at specific time points.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketSpreadDTO.SpreadTimeUtc">
            <summary>
            The time and date in for the spread value in UTC, interchangeable to local time using local time offset.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketSpreadDTO.Spread">
            <summary>
            The market spread value.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketSpreadDTO.SpreadUnits">
            <summary>
            The market spread value's unit type.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiMarketTagDTO">
            <summary>
            Basic information about a market tag.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketTagDTO.MarketTagId">
            <summary>
            A unique identifier for this market tag.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketTagDTO.Name">
            <summary>
            The market tag description. Can be localised if required.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiMarketTagDTO.Type">
            <summary>
            Used to determine if the market tag is a primary (1) or secondary (2) tag.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiOpenPositionDTO">
            <summary>
            A trade, or order that is currently open.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.OrderId">
            <summary>
            The order's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.AutoRollover">
            <summary>
            Flag to indicate whether the trade will automatically roll into the next market interval when the current market interval expires.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.MarketId">
            <summary>
            The market's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.MarketName">
            <summary>
            The market's name.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.Direction">
            <summary>
            The direction, buy or sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.Quantity">
            <summary>
            The quantity of the order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.Price">
            <summary>
            The price / rate that the trade was opened at.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.TradingAccountId">
            <summary>
            The ID of the trading account that the order is on.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.Currency">
            <summary>
            The trade currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.Status">
            <summary>
            The order status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.StopOrder">
            <summary>
            The stop order attached to this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.LimitOrder">
            <summary>
            The limit order attached to this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.LastChangedDateTimeUTC">
            <summary>
            Represents the date and time when the trade/order was last edited. **Note:** does not include things such as the current market price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOpenPositionDTO.Status_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiOrderActionResponseDTO">
            <summary>
            Response to an order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderActionResponseDTO.ActionedOrderId">
            <summary>
            Actioned Order ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderActionResponseDTO.ActioningOrderId">
            <summary>
            Actioning Order ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderActionResponseDTO.Quantity">
            <summary>
            Quantity.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderActionResponseDTO.ProfitAndLoss">
            <summary>
            Profit or Loss.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderActionResponseDTO.ProfitAndLossCurrency">
            <summary>
            Profit or Loss Currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderActionResponseDTO.OrderActionTypeId">
            <summary>
            Order Action Type.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiOrderDTO">
            <summary>
            Represents an order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.OrderId">
            <summary>
            The order identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.AutoRollover">
            <summary>
            Flag to indicate whether the trade will automatically roll into the next market interval when the current market interval expires.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.MarketId">
            <summary>
            A market's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.Direction">
            <summary>
            Direction identifier for trade, values supported are buy or sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.Quantity">
            <summary>
            Size of the order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.Price">
            <summary>
            The price at which the order was filled.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.TradingAccountId">
            <summary>
            The ID of the Trading Account associated with the order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.CurrencyId">
            <summary>
            Currency ID for order *(as represented in the trading system)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.StatusId">
            <summary>
            Status ID of order *(as represented in the trading system)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.TypeId">
            <summary>
            The type of the order, Trade, stop or limit.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.IfDone">
            <summary>
            List of If/Done Orders which will be filled when the initial order is triggered.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderDTO.OcoOrder">
            <summary>
            Corresponding OCO Order (One Cancels the Other).
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiOrderResponseDTO">
            <summary>
            Response to an order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.OrderId">
            <summary>
            Order ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.StatusReason">
            <summary>
            Order status reason ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.Status">
            <summary>
            Order status ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.OrderTypeId">
            <summary>
            Order type ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.Price">
            <summary>
            Order fill price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.TriggerPrice">
            <summary>
            Trigger price, if applicable
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.CommissionCharge">
            <summary>
            Commission charge.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.IfDone">
            <summary>
            List of If/Done orders.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.GuaranteedPremium">
            <summary>
            Premium for guaranteed orders.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.OCO">
            <summary>
            An order in an OCO relationship with this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.StatusReason_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiOrderResponseDTO.Status_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiPrimaryMarketTagDTO">
            <summary>
            Market tag information extended to include a list of child tags.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiPrimaryMarketTagDTO.Children">
            <summary>
            The list of child tags associated with this market tag.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiQuoteResponseDTO">
            <summary>
            Quote response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiQuoteResponseDTO.QuoteId">
            <summary>
            Quote ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiQuoteResponseDTO.Status">
            <summary>
            Quote status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiQuoteResponseDTO.StatusReason">
            <summary>
            Quote status reason.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSaveAccountInformationResponseDTO">
            <summary>
            An *(empty)* response to indicate that the save account information operation has completed.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSaveMarketInformationResponseDTO">
            <summary>
            An *(empty)* response to indicate that the save market information operation has completed.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSaveWatchlistRequestDTO">
            <summary>
            Request to save a watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSaveWatchlistRequestDTO.Watchlist">
            <summary>
            The watchlist to save. This will update an existing watchlist; or when the watchlistId is omitted or 0 is supplied, it will create a new watchlist.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSaveWatchlistResponseDTO">
            <summary>
            An *(empty)* response to indicate the save watchlist operation has completed.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSimulateOrderResponseDTO">
            <summary>
            Simulated order response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateOrderResponseDTO.StatusReason">
            <summary>
            Simulated order status reason ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateOrderResponseDTO.Status">
            <summary>
            Simulated order status ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateOrderResponseDTO.StatusReason_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateOrderResponseDTO.Status_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiStepMarginDTO">
            <summary>
            A market's step margin information as expressed by the TradingApi.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStepMarginDTO.EligibleForStepMargin">
            <summary>
            Flag indicating whether this market is eligible for step margin.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStepMarginDTO.StepMarginConfigured">
            <summary>
            Flag indicating whether this market has step margin configured.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStepMarginDTO.InheritedFromParentAccountOperator">
            <summary>
            Flag indicating whether this market's step margin configuration is inherited from a parent account operator.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStepMarginDTO.Bands">
            <summary>
            The step margining bands used for this market / account operator.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiStepMarginBandDTO">
            <summary>
            Represents a single step margin band as expressed by the TradingApi.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStepMarginBandDTO.LowerBound">
            <summary>
            Minimum threshold for this band, expressed in terms of the client's trade quantity.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStepMarginBandDTO.MarginFactor">
            <summary>
            The margin factor that is used for this band. It can be expressed as a percentage or in points based on the market's margin factor type. 
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiStopLimitOrderDTO">
            <summary>
            Represents a stop/limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderDTO.Guaranteed">
            <summary>
            Flag to determine whether an order is guaranteed to trigger and fill at the associated trigger price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderDTO.TriggerPrice">
            <summary>
            Price at which the order should be triggered.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderDTO.ExpiryDateTimeUTC">
            <summary>
            The associated expiry DateTime for a pair of GoodTillDate If/Done orders.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderDTO.Applicability">
            <summary>
            Identifier which relates to the expiry of the order/trade, i.e. GoodTillDate (GTD), GoodTillCancelled (GTC) or GoodForDay (GFD).
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderDTO.ParentOrderId">
            <summary>
            This represents the OrderID of any orders that the current order is related to. If there is no parent order as the order in question *is* the parent order, then the value is null.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderDTO.LastChangedDateTimeUTC">
            <summary>
            Represents the date and time when the trade/order was last edited. **Note:** does not include things such as the current market price.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiStopLimitOrderHistoryDTO">
            <summary>
            A stop or limit order from a historical perspective.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.OrderId">
            <summary>
            The order's unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.MarketId">
            <summary>
            The markets unique identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.MarketName">
            <summary>
            The market's name.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.Direction">
            <summary>
            The direction, buy or sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.OriginalQuantity">
            <summary>
            The quantity of the order when it became a trade / was cancelled etc.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.Price">
            <summary>
            The price / rate that the order was filled at.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.TriggerPrice">
            <summary>
            The price / rate that the order was set to trigger at.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.TradingAccountId">
            <summary>
            The trading account that the order is on.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.TypeId">
            <summary>
            The type of the order stop, limit or trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.OrderApplicabilityId">
            <summary>
            The duration that the order was applicable, i.e. good till cancelled (GTC), good for day (GFD), or good till time (GTT).
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.Currency">
            <summary>
            The trade currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.StatusId">
            <summary>
            The order status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.LastChangedDateTimeUtc">
            <summary>
            Represents the date and time when the trade/order was last edited. **Note:** does not include things such as the current market price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiStopLimitOrderHistoryDTO.CreatedDateTimeUtc">
            <summary>
            The creation date and time of the order.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiStopLimitResponseDTO">
            <summary>
            The response from the stop limit order request.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiTradeHistoryDTO">
            <summary>
            A Trade from a historical perspective.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.OrderId">
            <summary>
            The order ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.OpeningOrderIds">
            <summary>
            The orders that are being closed / part closed by this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.MarketId">
            <summary>
            The market ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.MarketName">
            <summary>
            The name of the market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.Direction">
            <summary>
            The direction of the trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.OriginalQuantity">
            <summary>
            The original quantity of the trade, before part closures.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.Quantity">
            <summary>
            The current quantity of the trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.Price">
            <summary>
            The open price of the trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.TradingAccountId">
            <summary>
            The Trading Account ID that the order is on.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.Currency">
            <summary>
            The trade currency.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CIAPI.DTO.ApiTradeHistoryDTO.RealisedPnl" -->
        <!-- Badly formed XML comment ignored for member "P:CIAPI.DTO.ApiTradeHistoryDTO.RealisedPnlCurrency" -->
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.LastChangedDateTimeUtc">
            <summary>
            Represents the date and time when the trade/order was last edited. **Note:** does not include things such as the current market price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeHistoryDTO.ExecutedDateTimeUtc">
            <summary>
            The time that the order was executed.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiTradeOrderDTO">
            <summary>
            Represents a trade order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderDTO.ParentOrderId">
            <summary>
            This represents the OrderID of any orders that the current order is related to. If there is no parent order as the order in question *is* the parent order, then the value is null.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderDTO.LastChangedDateTimeUTC">
            <summary>
            Represents the date and time when the trade/order was last edited. **Note:** does not include things such as the current market price.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiTradeOrderResponseDTO">
            <summary>
            The response from the trade request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.Status">
            <summary>
            The status of the order *(Pending, Accepted, Open, etc.)*
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.StatusReason">
            <summary>
            The ID corresponding to a more descriptive reason for the order status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.OrderId">
            <summary>
            The unique identifier associated to the order returned from the underlying trading system.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.Orders">
            <summary>
            List of orders with their associated response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.Quote">
            <summary>
            Quote response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.Actions">
            <summary>
            List of order actions with their associated response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.StatusReason_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradeOrderResponseDTO.Status_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiTradingAccountDTO">
            <summary>
            Information about a Trading Account.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingAccountDTO.TradingAccountId">
            <summary>
            Trading Account ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingAccountDTO.TradingAccountCode">
            <summary>
            Trading Account Code.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingAccountDTO.TradingAccountStatus">
            <summary>
            Trading account status with possible values *(Open, Closed)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingAccountDTO.TradingAccountType">
            <summary>
            Trading account type with possible values *(Spread, CFD)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiTradingDayTimesDTO">
            <summary>
            Contains start and end time information for market specific events such as trading and pricing.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingDayTimesDTO.DayOfWeek">
            <summary>
            Day of the week at which the times are valid.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingDayTimesDTO.StartTimeUtc">
            <summary>
            Start of the market time in both UTC and local time *(using Offset property)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiTradingDayTimesDTO.EndTimeUtc">
            <summary>
            End of the market time in both UTC and local time *(using Offset property)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.CancelOrderRequestDTO">
            <summary>
            A cancel order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.CancelOrderRequestDTO.OrderId">
            <summary>
            The order identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.CancelOrderRequestDTO.TradingAccountId">
            <summary>
            ID of the trading account associated with the cancel order request.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ClientAccountMarginDTO">
            <summary>
            The current margin and other account balance data for a specific client account used in the [ClientAccountMargin](http://labs.cityindex.com/docs/Content/Streaming%20Data/ClientAccountMargin.htm) stream.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.Cash">
            <summary>
            Cash balance expressed in the clients base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.Margin">
            <summary>
            The client account's total margin requirement expressed in base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.MarginIndicator">
            <summary>
            Margin indicator expressed as a percentage.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.NetEquity">
            <summary>
            Net equity expressed in the clients base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.OpenTradeEquity">
            <summary>
            Open trade equity *(open / unrealised PNL)* expressed in the client's base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.TradeableFunds">
            <summary>
            Tradable funds expressed in the client's base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.PendingFunds">
            <summary>
            N/A
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.TradingResource">
            <summary>
            Trading resource expressed in the client's base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.TotalMarginRequirement">
            <summary>
            Total margin requirement expressed in the client's base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.CurrencyId">
            <summary>
            The clients base currency ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientAccountMarginDTO.CurrencyISO">
            <summary>
            The clients base currency ISO code.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ClientPreferenceKeyDTO">
            <summary>
            Client preference key and value.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientPreferenceKeyDTO.Key">
            <summary>
            A unique client preference key identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientPreferenceKeyDTO.Value">
            <summary>
            A value associated for the client preference key.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ClientPreferenceRequestDTO">
            <summary>
            Get client preferences.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ClientPreferenceRequestDTO.Key">
            <summary>
            The client preference key to get.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.DeleteWatchlistItemRequestDTO">
            <summary>
            Delete watchlist item.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.DeleteWatchlistItemRequestDTO.ParentWatchlistDisplayOrderId">
            <summary>
            The watchlist display order ID to delete the item from.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.DeleteWatchlistItemRequestDTO.MarketId">
            <summary>
            The market item to delete.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ErrorCode">
            <summary>
            This is a description of the ErrorCode enum.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.NoError">
            <summary>
            No error has occurred.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.Forbidden">
            <summary>
            The server understood the request, but is refusing to fulfil it.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InternalServerError">
            <summary>
            An unexpected condition was encountered by the server preventing it from fulfilling the request.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InvalidParameterType">
            <summary>
            Server could not understand request due to an invalid parameter type.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.ParameterMissing">
            <summary>
            Server could not understand request due to a missing parameter.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InvalidParameterValue">
            <summary>
            Server could not understand request due to an invalid parameter value.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InvalidJsonRequest">
            <summary>
            Server could not understand request due to an invalid JSON request.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InvalidJsonRequestCaseFormat">
            <summary>
            Server could not understand request due to an invalid JSON case format.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InvalidCredentials">
            <summary>
            The credentials used to authenticate are invalid. Either the username, password or both are incorrect.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.InvalidSession">
            <summary>
            The session credentials supplied are invalid.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.NoDataAvailable">
            <summary>
            There is no data available.
            </summary>
        </member>
        <member name="F:CIAPI.DTO.ErrorCode.Throttling">
            <summary>
            Request has been throttled.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetActiveStopLimitOrderResponseDTO">
            <summary>
            Response containing the active stop limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetActiveStopLimitOrderResponseDTO.ActiveStopLimitOrder">
            <summary>
            The active stop limit order. If it is null then the active stop limit order does not exist.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetClientPreferenceResponseDTO">
            <summary>
            Results of client preference get.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetClientPreferenceResponseDTO.ClientPreference">
            <summary>
            The requested client preference key value pair.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetKeyListClientPreferenceResponseDTO">
            <summary>
            Results of client preference get.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetKeyListClientPreferenceResponseDTO.ClientPreferenceKeys">
            <summary>
            The list of client preference keys.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetListClientPreferenceResponseDTO">
            <summary>
            List of results of client preference get.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetListClientPreferenceResponseDTO.ClientPreferences">
            <summary>
            The requested client preference key value pair.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetMarketInformationResponseDTO">
            <summary>
            Response from a market information request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetMarketInformationResponseDTO.MarketInformation">
            <summary>
            The requested market information.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetMessagePopupResponseDTO">
            <summary>
            Message popup response denoting whether the client application should display a popup notification at startup.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetMessagePopupResponseDTO.AskForClientApproval">
            <summary>
            Flag indicating if the client application asks for client approval.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetMessagePopupResponseDTO.Message">
            <summary>
            The message to display to the client.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetNewsDetailResponseDTO">
            <summary>
            The response from the News Detail GET request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetNewsDetailResponseDTO.NewsDetail">
            <summary>
            The details of the news item.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetOpenPositionResponseDTO">
            <summary>
            Response containing the open position information.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetOpenPositionResponseDTO.OpenPosition">
            <summary>
            The open position information. If it is null then the open position does not exist.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetOrderResponseDTO">
            <summary>
            Response containing the order. Only one of the two fields will be populated depending upon the type of order *(Trade or Stop / Limit)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetOrderResponseDTO.TradeOrder">
            <summary>
            The details of the order if it is a trade / open position.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetOrderResponseDTO.StopLimitOrder">
            <summary>
            The details of the order if it is a stop limit order.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetPriceBarResponseDTO">
            <summary>
            The response from a price bar history GET request. Contains both an array of finalized price bars, and a partial *(not finalized)* bar for the current period.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetPriceBarResponseDTO.PriceBars">
            <summary>
            An array of finalized price bars, sorted in ascending order based on PriceBar.BarDate.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetPriceBarResponseDTO.PartialPriceBar">
            <summary>
            The *(non-finalized)* price bar data for the current period *(i.e, the period that has not yet completed)*.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetPriceTickResponseDTO">
            <summary>
            The response from a request for historical Price Ticks.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetPriceTickResponseDTO.PriceTicks">
            <summary>
            An array of price ticks, sorted in ascending order by PriceTick.TickDate.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.GetVersionInformationResponseDTO">
            <summary>
            The response containing version information and upgrade URL of the client application.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetVersionInformationResponseDTO.MinimumRequiredVersion">
            <summary>
            The minimum version of the client application that can be used. If the installed version is less than this it shouldn't be used.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetVersionInformationResponseDTO.LatestVersion">
            <summary>
            The latest version of the client application that can be used.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.GetVersionInformationResponseDTO.UpgradeUrl">
            <summary>
            The URL of the upgrade.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.InsertWatchlistItemRequestDTO">
            <summary>
            Update watchlist with item request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.InsertWatchlistItemRequestDTO.ParentWatchlistDisplayOrderId">
            <summary>
            The watchlist display order ID to add the item.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.InsertWatchlistItemRequestDTO.MarketId">
            <summary>
            The market item to add into the watchlist.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListActiveStopLimitOrderResponseDTO">
            <summary>
            Contains the response of a [ListActiveStopLimitOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveStopLimitOrders.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListActiveStopLimitOrderResponseDTO.ActiveStopLimitOrders">
            <summary>
            The requested list of active stop / limit orders.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListCfdMarketsResponseDTO">
            <summary>
            Contains the response of a [ListCfdMarkets](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListCfdMarkets.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListCfdMarketsResponseDTO.Markets">
            <summary>
            A list of CFD markets.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListMarketInformationRequestDTO">
            <summary>
            Get market information request for a list of markets.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListMarketInformationRequestDTO.MarketIds">
            <summary>
            The list of market IDs to get information for.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListMarketInformationResponseDTO">
            <summary>
            Response from a market information request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListMarketInformationResponseDTO.MarketInformation">
            <summary>
            The list of market information for each requested market.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListMarketInformationSearchResponseDTO">
            <summary>
            Response from a market information search request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListMarketInformationSearchResponseDTO.MarketInformation">
            <summary>
            The requested list of market information.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListMarketSearchResponseDTO">
            <summary>
            Response from a market search request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListMarketSearchResponseDTO.Markets">
            <summary>
            The requested list of markets.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListNewsHeadlinesRequestDTO">
            <summary>
            A request for news stories. The stories can be filtered by one of the four available filters: *(Category, MarketId, MarketName, RicCode)*. Only use **1** of the filters at a time. If zero or more than one filter is used simultaneously, then an exception is thrown and a 400 status error code is returned.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.Source">
            <summary>
            The source for the news stories. Leave blank to use the default Dow Jones news provider as the source.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.Category">
            <summary>
            A news category that can be used to filter the news.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.MarketId">
            <summary>
            A market ID that can be used to filter the news.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.MarketName">
            <summary>
            A market name that can be used to filter the news.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.RicCode">
            <summary>
            A Reuters Instrument Code *(RIC)* that can be used to filter the news.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.MaxResults">
            <summary>
            The maximum number of responses to return. Leave blank to return the top 25 results.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesRequestDTO.CultureId">
            <summary>
            The Culture ID used to filter results. Leave blank to use the culture of the requesting user.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListNewsHeadlinesResponseDTO">
            <summary>
            The response from a GET request for News headlines.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListNewsHeadlinesResponseDTO.Headlines">
            <summary>
            A list of News headlines.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListOpenPositionsResponseDTO">
            <summary>
            Contains the result of a [ListOpenPositions](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListOpenPositions.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListOpenPositionsResponseDTO.OpenPositions">
            <summary>
            A list of trades / open positions.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListSpreadMarketsResponseDTO">
            <summary>
            Contains the result of a [ListSpreadMarkets](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListSpreadMarkets.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListSpreadMarketsResponseDTO.Markets">
            <summary>
            A list of Spread Betting markets.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListStopLimitOrderHistoryResponseDTO">
            <summary>
            Contains the result of a [ListStopLimitOrderHistory](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListStopLimitOrderHistory.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListStopLimitOrderHistoryResponseDTO.StopLimitOrderHistory">
            <summary>
            A list of historical stop / limit orders.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListTradeHistoryResponseDTO">
            <summary>
            Contains the result of a [ListTradeHistory](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListTradeHistory.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListTradeHistoryResponseDTO.TradeHistory">
            <summary>
            A list of historical trades.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListTradeHistoryResponseDTO.SupplementalOpenOrders">
            <summary>
            A list of trades which are referenced as OpenOrderId's in the trade history list - but do not actually exist in that list.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListWatchlistResponseDTO">
            <summary>
            Response to a client watchlist GET request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListWatchlistResponseDTO.ClientAccountId">
            <summary>
            Client account ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListWatchlistResponseDTO.ClientAccountWatchlists">
            <summary>
            List of client account watchlists.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.MarketInformationSearchWithTagsResponseDTO">
            <summary>
            Response from a market information search with tags request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.MarketInformationSearchWithTagsResponseDTO.Markets">
            <summary>
            The requested list of market information.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.MarketInformationSearchWithTagsResponseDTO.Tags">
            <summary>
            The requested list of market tags.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.MarketInformationTagLookupResponseDTO">
            <summary>
            Response from a search request of market information tags.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.MarketInformationTagLookupResponseDTO.Tags">
            <summary>
            The requested list of market tags.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.NewsDetailDTO">
            <summary>
            Contains details of a specific news story.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.NewsDTO">
            <summary>
            A headline for a news story.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewsDTO.StoryId">
            <summary>
            The unique identifier for a news story.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewsDTO.Headline">
            <summary>
            The news story headline.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewsDTO.PublishDate">
            <summary>
            The date on which the news story was published. Always in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewsDetailDTO.Story">
            <summary>
            The detail of the news story. This can contain HTML characters.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.NewStopLimitOrderRequestDTO">
            <summary>
            A request for a stop/limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.OrderId">
            <summary>
            The identifier of the order to update.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.MarketId">
            <summary>
            The unique identifier for the market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.Currency">
            <summary>
            Currency to place order in.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.AutoRollover">
            <summary>
            Flag to indicate whether the trade will automatically roll into the next market when the current market expires.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.Direction">
            <summary>
            Direction identifier for order/trade, values supported are buy or sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.PositionMethodId">
            <summary>
            Indicates the position of the trade. 1 == LongOrShortOnly, 2 == LongAndShort.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.Quantity">
            <summary>
            Size of the order/trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.BidPrice">
            <summary>
            Market prices are quoted as a pair *(buy/sell or bid/offer)*, the BidPrice is the lower of the two.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.OfferPrice">
            <summary>
            Market prices are quoted as a pair *(buy/sell or bid/offer)*, the OfferPrice is the higher of the market price pair.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.AuditId">
            <summary>
            Unique identifier for a price tick.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.TradingAccountId">
            <summary>
            The ID of the trading account associated with the trade/order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.IfDone">
            <summary>
            List of If/Done Orders that will be filled when the initial trade/order is triggered.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.OcoOrder">
            <summary>
            Corresponding OCO Order (One Cancels the Other) if one has been defined.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.Applicability">
            <summary>
            Identifier which relates to the expiry of the order/trade, i.e. GoodTillDate (GTD), GoodTillCancelled (GTC) or GoodForDay (GFD).
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.ExpiryDateTimeUTC">
            <summary>
            The associated expiry DateTime for a pair of GoodTillDate If/Done orders.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.Guaranteed">
            <summary>
            Flag to determine whether an order is guaranteed to trigger and fill at the associated trigger price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewStopLimitOrderRequestDTO.TriggerPrice">
            <summary>
            Price at which the order is intended to be triggered.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.NewTradeOrderRequestDTO">
            <summary>
            A request for a trade order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.MarketId">
            <summary>
            The unique identifier for a market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.Currency">
            <summary>
            Currency to place order in.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.AutoRollover">
            <summary>
            Flag to indicate whether the trade will automatically roll into the next market interval when the current market interval expires.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.Direction">
            <summary>
            Direction identifier for order/trade, values supported are buy or sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.Quantity">
            <summary>
            Size of the order/trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.QuoteId">
            <summary>
            The quote identifier
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.PositionMethodId">
            <summary>
            Indicates the position of the trade. 1 == LongOrShortOnly, 2 == LongAndShort.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.BidPrice">
            <summary>
            Market prices are quoted as a pair *(buy/sell or bid/offer)*, the BidPrice is the lower value of the pair.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.OfferPrice">
            <summary>
            Market prices are quote as a pair *(buy/sell or bid/offer)*, the OfferPrice is the higher value of the pair.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.AuditId">
            <summary>
            Unique identifier for a price tick.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.TradingAccountId">
            <summary>
            The ID of the trading account associated with the trade/order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.IfDone">
            <summary>
            List of If/Done Orders that will be filled when the initial trade/order is triggered.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.NewTradeOrderRequestDTO.Close">
            <summary>
            List of existing order ID's that require part or full closure.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.OrderDTO">
            <summary>
            An order for a specific Trading Account.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.OrderId">
            <summary>
            The Order identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.MarketId">
            <summary>
            The Market identifier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.ClientAccountId">
            <summary>
            Client account ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.TradingAccountId">
            <summary>
            Trading account ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.CurrencyId">
            <summary>
            Trade currency ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.CurrencyISO">
            <summary>
            Trade currency ISO code.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.Direction">
            <summary>
            Direction of the order (1 == buy, 0 == sell).
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.AutoRollover">
            <summary>
            Flag indicating whether the order automatically rolls over.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.LastChangedTime">
            <summary>
            The date and time that the order was last changed. Always expressed in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.OpenPrice">
            <summary>
            The open price of the order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.OriginalLastChangedDateTime">
            <summary>
            The date of the order. Always expressed in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.OriginalQuantity">
            <summary>
            The orders original quantity, before any part / full closures.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.PositionMethodId">
            <summary>
            Indicates the position of the trade. 1 == LongOrShortOnly, 2 == LongAndShort.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.Quantity">
            <summary>
            The current quantity of the order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.Type">
            <summary>
            The type of the order *(1 = Trade / 2 = Stop / 3 = Limit)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.Status">
            <summary>
            The order status ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.OrderDTO.ReasonId">
            <summary>
            The order status reason identifier.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.PriceBarDTO">
            <summary>
            The details of a specific price bar, useful for plotting candlestick charts.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceBarDTO.BarDate">
            <summary>
            The starting date for the price bar interval.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceBarDTO.Open">
            <summary>
            The price at the start *(open)* of the price bar interval.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceBarDTO.High">
            <summary>
            The highest price occurring during the interval of the price bar.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceBarDTO.Low">
            <summary>
            The lowest price occurring during the interval of the price bar.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceBarDTO.Close">
            <summary>
            The price at the end *(close)* of the price bar interval.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.PriceDTO">
            <summary>
            A Price for a specific Market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.MarketId">
            <summary>
            The Market that the Price is related to.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.TickDate">
            <summary>
            The date of the Price. Always expressed in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Bid">
            <summary>
            The current Bid price *(price at which the customer can sell)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Offer">
            <summary>
            The current Offer price *(price at which the customer can buy, sometimes referred to as Ask price)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Price">
            <summary>
            The current mid price.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.High">
            <summary>
            The highest price reached for the day.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Low">
            <summary>
            The lowest price reached for the day.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Change">
            <summary>
            The change from the previous day's close to the current price - can be negative or positive.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Direction">
            <summary>
            The direction of movement since the last price. 1 == up, 0 == down.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.Delta">
            <summary>
            The Delta of an option. Delta measures the rate of change of option value with respect to changes in the underlying asset's price. This is null for non-option markets.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.ImpliedVolatility">
            <summary>
            A measure of an options's price variance over time. **Note:** this volatility is a calculated value from a proprietary model. For non-option markets this is null.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.AuditId">
            <summary>
            A unique ID for this price. Treat as a unique, but random string.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceDTO.StatusSummary">
            <summary>
            The current status summary for this price. Values are: 0 = Normal 1 = Indicative 2 = PhoneOnly 3 = Suspended 4 = Closed
            </summary>
        </member>
        <member name="T:CIAPI.DTO.PriceTickDTO">
            <summary>
            The mid price at the point in time of the price tick.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceTickDTO.TickDate">
            <summary>
            The date time at which a price tick occurred. Accurate to the millisecond.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.PriceTickDTO.Price">
            <summary>
            The mid price.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.QuoteDTO">
            <summary>
            A quote for a specific order request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.QuoteId">
            <summary>
            The unique ID of the Quote.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.OrderId">
            <summary>
            The ID of the Order that the Quote is related to.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.MarketId">
            <summary>
            The Market the Quote is related to.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.BidPrice">
            <summary>
            The Price of the original Order request for a Buy.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.BidAdjust">
            <summary>
            The amount the bid price will be adjusted to become an order when the customer is buying *(BidPrice + BidAdjust = BuyPrice)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.OfferPrice">
            <summary>
            The Price of the original Order request for a Sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.OfferAdjust">
            <summary>
            The amount the offer price will be adjusted to become an order when the customer is selling *(OfferPrice + OfferAdjust = OfferPrice)*.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.Quantity">
            <summary>
            The Quantity is the number of units for the trade i.e CFD Quantity = Number of CFDs to Buy or Sell , FX Quantity = amount in base currency.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.CurrencyId">
            <summary>
            The system internal ID for the ISO Currency. An API call will be available in the near future to look up the equivalent ISO Code.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.StatusId">
            <summary>
            The Status ID of the Quote. An API call will be available in the near future to look up the Status values.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.TypeId">
            <summary>
            The quote type ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.RequestDateTimeUTC">
            <summary>
            The timestamp the quote was requested. Always expressed in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.ApprovalDateTimeUTC">
            <summary>
            The timestamp the quote was approved. Always expressed in UTC.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.BreathTimeSecs">
            <summary>
            Amount of time in seconds the quote is valid for.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.IsOversize">
            <summary>
            Is the quote oversize.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.ReasonId">
            <summary>
            The reason for generating the quote.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.QuoteDTO.TradingAccountId">
            <summary>
            The trading account identifier that generated the quote.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.SaveClientPreferenceRequestDTO">
            <summary>
            Save client preferences.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.SaveClientPreferenceRequestDTO.ClientPreference">
            <summary>
            The list of client preferences key value pairs to be saved.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.SaveMarketInformationRequestDTO">
            <summary>
            Get market information for a list of markets.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.SaveMarketInformationRequestDTO.MarketInformation">
            <summary>
            The list of market information objects to be saved.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.SaveMarketInformationRequestDTO.TradingAccountId">
            <summary>
            The trading account on which the market information objects should be saved.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.SystemStatusDTO">
            <summary>
            Response containing the system status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.SystemStatusDTO.StatusMessage">
            <summary>
            The status message.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.SystemStatusRequestDTO">
            <summary>
            System status request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.SystemStatusRequestDTO.TestDepth">
            <summary>
            Depth to test.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.TradeMarginDTO">
            <summary>
            The current margin requirement and open trade equity (OTE) of an order, used in the TradeMargin stream.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.ClientAccountId">
            <summary>
            The client account this message relates to.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.DirectionId">
            <summary>
            The order direction, 1 == Buy and 0 == Sell.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.MarginRequirementConverted">
            <summary>
            The margin requirement converted to the correct currency for this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.MarginRequirementConvertedCurrencyId">
            <summary>
            The currency ID of the margin requirement for this order. See the "Currency ID" section of the CIAPI User Guide for a listing of the currency IDs.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.MarginRequirementConvertedCurrencyISOCode">
            <summary>
            The currency ISO code of the margin requirement for this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.MarketId">
            <summary>
            The market ID the order is on.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.MarketTypeId">
            <summary>
            The market type ID. 1 = Option Market; 2 = Ordinary Market; 4 = Binary Market.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.Multiplier">
            <summary>
            The margin multiplier.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.OrderId">
            <summary>
            The Order ID.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.OTEConverted">
            <summary>
            The Open Trade Equity converted to the correct currency for this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.OTEConvertedCurrencyId">
            <summary>
            The currency ID of the OTE for this order. See the "Currency ID" section of the CIAPI User Guide for a listing of the currency IDs.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.OTEConvertedCurrencyISOCode">
            <summary>
            The currency ISO code of the OTE for this order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.PriceCalculatedAt">
            <summary>
            The price the calculation was performed at.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.PriceTakenAt">
            <summary>
            The price the order was taken at.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.TradeMarginDTO.Quantity">
            <summary>
            The quantity of the order.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.UpdateDeleteClientPreferenceResponseDTO">
            <summary>
            A bool result to signify status of completed operation.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.UpdateDeleteClientPreferenceResponseDTO.Successful">
            <summary>
            Status of save
            </summary>
        </member>
        <member name="T:CIAPI.DTO.UpdateStopLimitOrderRequestDTO">
            <summary>
            A request to update a stop/limit order.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.UpdateTradeOrderRequestDTO">
            <summary>
            A request to update a trade order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.UpdateTradeOrderRequestDTO.OrderId">
            <summary>
            The identifier of the order to update.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.UpdateWatchlistDisplayOrderRequestDTO">
            <summary>
            Request to update the display order of items in a watchlist.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.UpdateWatchlistDisplayOrderRequestDTO.NewDisplayOrderIdSequence">
            <summary>
            Represents the new client watchlist displayOrderId list sequence.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListActiveOrdersRequestDTO">
            <summary>
            Contains the request for a [ListActiveOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveOrders.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListActiveOrdersRequestDTO.TradingAccountId">
            <summary>
            If specified, the request fetches all open positions and orders for this trading account. *(Optional)*
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListActiveOrdersRequestDTO.MaxResults">
            <summary>
            The maximum number of results to return.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ListActiveOrdersResponseDTO">
            <summary>
            Contains the response for a [ListActiveOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveOrders.htm) query.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ListActiveOrdersResponseDTO.ActiveOrders">
            <summary>
            The requested list of open positions and active orders.
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiActiveOrderDTO">
            <summary>
            Represents a trade order or a stop/limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveOrderDTO.TradeOrder">
            <summary>
            Represents a trade order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveOrderDTO.StopLimitOrder">
            <summary>
            Represents a stop/limit order.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiActiveOrderDTO.TypeId">
            <summary>
            Indicates the type of the order. 
            </summary>
        </member>
        <member name="T:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO">
            <summary>
            The response from the simulated trade request.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.Status">
            <summary>
            The status of the simulated order *(Pending, Accepted, Open, etc.)*
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.StatusReason">
            <summary>
            The ID corresponding to a more descriptive reason for the order status.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.SimulatedCash">
            <summary>
            The simulated cash balance after executing *(opening or closing)* a trade. The balance may decrease after opening a trade *(as cash may be allocated towards margin requirement)* and increase /reduce /remain unchanged following a closure.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.ActualCash">
            <summary>
            The actual cash balance before the trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.SimulatedTotalMarginRequirement">
            <summary>
            The simulated total margin requirement (TMR) after executing *(opening or closing)* a trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.ActualTotalMarginRequirement">
            <summary>
            The actual total margin requirement (TMR) before the trade.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.CurrencyId">
            <summary>
            The currency ID for the currency values in this response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.Orders">
            <summary>
            List of simulated orders with their associated response.
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.StatusReason_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="P:CIAPI.DTO.ApiSimulateTradeOrderResponseDTO.Status_Resolved">
            <summary>
            Plain text StatusReason
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.LightstreamerClient">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.IStreamingClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildPricesListener(System.Int32[])">
            <summary>
            
            </summary>
            <param name="marketIds"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildNewsHeadlinesListener(System.String)">
            <summary>
            
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildQuotesListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildClientAccountMarginListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildOrdersListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildDefaultPricesListener(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountOperatorId"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.BuildTradeMarginListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClient.TearDownListener(CIAPI.StreamingClient.IStreamingListener)">
            <summary>
            
            </summary>
            <param name="listener"></param>
        </member>
        <member name="E:CIAPI.Streaming.IStreamingClient.StatusChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildNewsHeadlinesListener(System.String)">
            <summary>
            
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildPricesListener(System.Int32[])">
            <summary>
            
            </summary>
            <param name="marketIds"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildQuotesListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildClientAccountMarginListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildOrdersListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildDefaultPricesListener(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountOperatorId"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildTradeMarginListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.OnStatusChanged(System.Object,CIAPI.StreamingClient.StatusEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.#ctor(System.Uri,System.String,System.String,System.Boolean,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="sessionId"></param>
            <param name="usePolling"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.TearDownListener(CIAPI.StreamingClient.IStreamingListener)">
            <summary>
            Allows consumer to stop and remove a listener from this client.
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.BuildListener``1(System.String,System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="dataAdapter"></param>
            <param name="mode"></param>
            <param name="snapshot"></param>
            <param name="topic"></param>
            <typeparam name="TDto"></typeparam>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:CIAPI.Streaming.LightstreamerClient.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="E:CIAPI.Streaming.LightstreamerClient.StatusChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:CIAPI.Streaming.LightstreamerClient.StatusUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client.ListActiveOrders(CIAPI.DTO.ListActiveOrdersRequestDTO)">
            <summary>
            Queries the specified trading account for all open positions and active orders. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call this for the initial data to display in the grid, and call the HTTP service [GetOpenPosition](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOpenPosition.htm) when you get updates on the order stream to get the updated data in this format. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="requestDTO">Contains the request for a ListActiveOrders query.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client.BeginListActiveOrders(CIAPI.DTO.ListActiveOrdersRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries the specified trading account for all open positions and active orders. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call this for the initial data to display in the grid, and call the HTTP service [GetOpenPosition](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOpenPosition.htm) when you get updates on the order stream to get the updated data in this format. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="requestDTO">Contains the request for a ListActiveOrders query.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client.BeginRequest(Salient.ReliableHttpClient.RequestMethod,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},Salient.ReliableHttpClient.ContentType,Salient.ReliableHttpClient.ContentType,System.TimeSpan,System.Int32,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <param name="target"></param>
            <param name="uriTemplate"></param>
            <param name="parameters"></param>
            <param name="requestContentType"></param>
            <param name="responseContentType"></param>
            <param name="cacheDuration"></param>
            <param name="timeout"></param>
            <param name="retryCount"></param>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:CIAPI.Rpc.Client.Request``1(Salient.ReliableHttpClient.RequestMethod,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},Salient.ReliableHttpClient.ContentType,Salient.ReliableHttpClient.ContentType,System.TimeSpan,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <param name="target"></param>
            <param name="uriTemplate"></param>
            <param name="parameters"></param>
            <param name="requestContentType"></param>
            <param name="responseContentType"></param>
            <param name="cacheDuration"></param>
            <param name="timeout"></param>
            <param name="retryCount"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:CIAPI.Rpc.Client.Request(Salient.ReliableHttpClient.RequestMethod,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},Salient.ReliableHttpClient.ContentType,Salient.ReliableHttpClient.ContentType,System.TimeSpan,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="method"></param>
            <param name="target"></param>
            <param name="uriTemplate"></param>
            <param name="parameters"></param>
            <param name="requestContentType"></param>
            <param name="responseContentType"></param>
            <param name="cacheDuration"></param>
            <param name="timeout"></param>
            <param name="retryCount"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:CIAPI.Rpc.Client.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client.EndRequest(Salient.ReliableHttpClient.ReliableAsyncResult)">
            <summary>
            
            </summary>
            <param name="result"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:Salient.ReliableHttpClient.ReliableHttpException"></exception>
            <exception cref="T:CIAPI.Rpc.ServerConnectionException"></exception>
        </member>
        <member name="M:CIAPI.Rpc.Client.CreateStreamingClient">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Rpc.Client.CreateStreamingClient(System.Boolean)">
            <summary>
            
            </summary>
            <param name="usePolling"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:CIAPI.Rpc.Client.LogIn(System.String,System.String)">
            <summary>
            Log In
            </summary>		
            <param name="userName">Username is case sensitive</param>
            <param name="password">Password is case sensitive</param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Rpc.Client.LogInUsingSession(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="username"></param>
            <param name="session"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client.BeginLogIn(System.String,System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Log In
            </summary>		
            <param name="callback"></param>
            <param name="state"></param>
            <param name="userName">Username is case sensitive</param>
            <param name="password">Password is case sensitive</param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Rpc.Client.EndLogIn(Salient.ReliableHttpClient.ReliableAsyncResult)">
            <summary>
            
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Rpc.Client.LogOut">
            <summary>
            Log out
            </summary>		
            <returns></returns>
        </member>
        <member name="M:CIAPI.Rpc.Client.BeginLogOut(Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Log out
            </summary>		
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Rpc.Client.EndLogOut(Salient.ReliableHttpClient.ReliableAsyncResult)">
            <summary>
            
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="P:CIAPI.Rpc.Client.Http200ErrorsOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.Rpc.Client.MagicNumberResolver">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.Rpc.Client.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.Rpc.Client.Session">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client._Authentication.LogOn(CIAPI.DTO.ApiLogOnRequestDTO)">
            <summary>
            Create a new session. This is how you "log on" to the CIAPI.
            </summary>
            <param name="apiLogOnRequest">The request to create a session *(log on)*.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Authentication.BeginLogOn(CIAPI.DTO.ApiLogOnRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Create a new session. This is how you "log on" to the CIAPI.
            </summary>
            <param name="apiLogOnRequest">The request to create a session *(log on)*.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Authentication.DeleteSession(System.String,System.String)">
            <summary>
            Delete a session. This is how you "log off" from the CIAPI.
            </summary>
            <param name="UserName">Username is case sensitive. May be set as a service parameter or as a request header.</param>
            <param name="Session">The session token. May be set as a service parameter or as a request header.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Authentication.BeginDeleteSession(System.String,System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Delete a session. This is how you "log off" from the CIAPI.
            </summary>
            <param name="UserName">Username is case sensitive. May be set as a service parameter or as a request header.</param>
            <param name="Session">The session token. May be set as a service parameter or as a request header.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Authentication.ChangePassword(CIAPI.DTO.ApiChangePasswordRequestDTO)">
            <summary>
            Change a user's password.
            </summary>
            <param name="apiChangePasswordRequest">The change password request details.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Authentication.BeginChangePassword(CIAPI.DTO.ApiChangePasswordRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Change a user's password.
            </summary>
            <param name="apiChangePasswordRequest">The change password request details.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CIAPI.Rpc.Client._PriceHistory.GetPriceBars(System.String,System.String,System.Int32,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:CIAPI.Rpc.Client._PriceHistory.BeginGetPriceBars(System.String,System.String,System.Int32,System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)" -->
        <member name="M:CIAPI.Rpc.Client._PriceHistory.GetPriceTicks(System.String,System.String)">
            <summary>
            Get historic price ticks for the specified market. Returns price ticks in ascending order up to the current time. The length of time that elapses between each tick is usually different.
            </summary>
            <param name="MarketId">The market ID.</param>
            <param name="PriceTicks">The total number of price ticks to return.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._PriceHistory.BeginGetPriceTicks(System.String,System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get historic price ticks for the specified market. Returns price ticks in ascending order up to the current time. The length of time that elapses between each tick is usually different.
            </summary>
            <param name="MarketId">The market ID.</param>
            <param name="PriceTicks">The total number of price ticks to return.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._News.ListNewsHeadlinesWithSource(System.String,System.String,System.Int32)">
            <summary>
            Get a list of current news headlines.
            </summary>
            <param name="source">The news feed source provider. Valid options are: **dj**|**mni**|**ci**.</param>
            <param name="category">Filter headlines by category. Valid categories depend on the source used:  for **dj**: *uk*|*aus*, for **ci**: *SEMINARSCHINA*, for **mni**: *ALL*.</param>
            <param name="maxResults">Specify the maximum number of headlines returned.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._News.BeginListNewsHeadlinesWithSource(System.String,System.String,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get a list of current news headlines.
            </summary>
            <param name="source">The news feed source provider. Valid options are: **dj**|**mni**|**ci**.</param>
            <param name="category">Filter headlines by category. Valid categories depend on the source used:  for **dj**: *uk*|*aus*, for **ci**: *SEMINARSCHINA*, for **mni**: *ALL*.</param>
            <param name="maxResults">Specify the maximum number of headlines returned.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._News.ListNewsHeadlines(CIAPI.DTO.ListNewsHeadlinesRequestDTO)">
            <summary>
            Get a list of current news headlines.
            </summary>
            <param name="request">Object specifying the various request parameters.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._News.BeginListNewsHeadlines(CIAPI.DTO.ListNewsHeadlinesRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get a list of current news headlines.
            </summary>
            <param name="request">Object specifying the various request parameters.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._News.GetNewsDetail(System.String,System.String)">
            <summary>
            Get the detail of the specific news story matching the story ID in the parameter.
            </summary>
            <param name="source">The news feed source provider. Valid options are **dj**|**mni**|**ci**.</param>
            <param name="storyId">The news story ID.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._News.BeginGetNewsDetail(System.String,System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get the detail of the specific news story matching the story ID in the parameter.
            </summary>
            <param name="source">The news feed source provider. Valid options are **dj**|**mni**|**ci**.</param>
            <param name="storyId">The news story ID.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._CFDMarkets.ListCfdMarkets(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns a list of CFD markets filtered by market name and/or market code. Leave the market name and code parameters empty to return all markets available to the User.
            </summary>
            <param name="searchByMarketName">The characters that the CFD market name starts with. *(Optional)*.</param>
            <param name="searchByMarketCode">The characters that the market code starts with, normally this is the RIC code for the market. *(Optional)*.</param>
            <param name="ClientAccountId">The logged on user's ClientAccountId. This only shows you the markets that the user can trade. *(Required)*.</param>
            <param name="maxResults">The maximum number of markets to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form. Helpful when displaying data on a small screen.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._CFDMarkets.BeginListCfdMarkets(System.String,System.String,System.Int32,System.Int32,System.Boolean,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Returns a list of CFD markets filtered by market name and/or market code. Leave the market name and code parameters empty to return all markets available to the User.
            </summary>
            <param name="searchByMarketName">The characters that the CFD market name starts with. *(Optional)*.</param>
            <param name="searchByMarketCode">The characters that the market code starts with, normally this is the RIC code for the market. *(Optional)*.</param>
            <param name="ClientAccountId">The logged on user's ClientAccountId. This only shows you the markets that the user can trade. *(Required)*.</param>
            <param name="maxResults">The maximum number of markets to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form. Helpful when displaying data on a small screen.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._SpreadMarkets.ListSpreadMarkets(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns a list of Spread Betting markets filtered by market name and/or market code. Leave the market name and code parameters empty to return all markets available to the User.
            </summary>
            <param name="searchByMarketName">The characters that the Spread market name starts with. *(Optional)*.</param>
            <param name="searchByMarketCode">The characters that the Spread market code starts with, normally this is the RIC code for the market. *(Optional)*.</param>
            <param name="ClientAccountId">The logged on user's ClientAccountId. *(This only shows you markets that you can trade on.)*</param>
            <param name="maxResults">The maximum number of markets to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form. Helpful when displaying data on a small screen.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._SpreadMarkets.BeginListSpreadMarkets(System.String,System.String,System.Int32,System.Int32,System.Boolean,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Returns a list of Spread Betting markets filtered by market name and/or market code. Leave the market name and code parameters empty to return all markets available to the User.
            </summary>
            <param name="searchByMarketName">The characters that the Spread market name starts with. *(Optional)*.</param>
            <param name="searchByMarketCode">The characters that the Spread market code starts with, normally this is the RIC code for the market. *(Optional)*.</param>
            <param name="ClientAccountId">The logged on user's ClientAccountId. *(This only shows you markets that you can trade on.)*</param>
            <param name="maxResults">The maximum number of markets to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form. Helpful when displaying data on a small screen.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.GetMarketInformation(System.String)">
            <summary>
            Get Market Information for the single specified market supplied in the parameter.
            </summary>
            <param name="MarketId">The market ID.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginGetMarketInformation(System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get Market Information for the single specified market supplied in the parameter.
            </summary>
            <param name="MarketId">The market ID.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.ListMarketInformationSearch(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns market information for the markets that meet the search criteria. The search can be performed by market code and/or market name, and can include CFDs and Spread Bet markets.
            </summary>
            <param name="searchByMarketCode">Sets the search to use market code.</param>
            <param name="searchByMarketName">Sets the search to use market Name.</param>
            <param name="spreadProductType">Sets the search to include spread bet markets.</param>
            <param name="cfdProductType">Sets the search to include CFD markets.</param>
            <param name="binaryProductType">Sets the search to include binary markets.</param>
            <param name="includeOptions">When set to true, the search captures and returns options markets. When set to false, options markets are excluded from the search results.</param>
            <param name="query">The text to search for. Matches part of market name / code from the start.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form.  Helpful when displaying data on a small screen.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginListMarketInformationSearch(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Returns market information for the markets that meet the search criteria. The search can be performed by market code and/or market name, and can include CFDs and Spread Bet markets.
            </summary>
            <param name="searchByMarketCode">Sets the search to use market code.</param>
            <param name="searchByMarketName">Sets the search to use market Name.</param>
            <param name="spreadProductType">Sets the search to include spread bet markets.</param>
            <param name="cfdProductType">Sets the search to include CFD markets.</param>
            <param name="binaryProductType">Sets the search to include binary markets.</param>
            <param name="includeOptions">When set to true, the search captures and returns options markets. When set to false, options markets are excluded from the search results.</param>
            <param name="query">The text to search for. Matches part of market name / code from the start.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form.  Helpful when displaying data on a small screen.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.ListMarketSearch(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns a list of markets that meet the search criteria. The search can be performed by market code and/or market name, and can include CFDs and Spread Bet markets. Leave the query string empty to return all markets available to the user.
            </summary>
            <param name="searchByMarketCode">Sets the search to use market code.</param>
            <param name="searchByMarketName">Sets the search to use market Name.</param>
            <param name="spreadProductType">Sets the search to include spread bet markets.</param>
            <param name="cfdProductType">Sets the search to include CFD markets.</param>
            <param name="binaryProductType">Sets the search to include binary markets.</param>
            <param name="includeOptions">When set to true, the search captures and returns options markets. When set to false, options markets are excluded from the search results.</param>
            <param name="query">The text to search for. Matches part of market name / code from the start. *(Optional)*.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form.  Helpful when displaying data on a small screen.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginListMarketSearch(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Returns a list of markets that meet the search criteria. The search can be performed by market code and/or market name, and can include CFDs and Spread Bet markets. Leave the query string empty to return all markets available to the user.
            </summary>
            <param name="searchByMarketCode">Sets the search to use market code.</param>
            <param name="searchByMarketName">Sets the search to use market Name.</param>
            <param name="spreadProductType">Sets the search to include spread bet markets.</param>
            <param name="cfdProductType">Sets the search to include CFD markets.</param>
            <param name="binaryProductType">Sets the search to include binary markets.</param>
            <param name="includeOptions">When set to true, the search captures and returns options markets. When set to false, options markets are excluded from the search results.</param>
            <param name="query">The text to search for. Matches part of market name / code from the start. *(Optional)*.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="useMobileShortName">True if the market name should be in short form.  Helpful when displaying data on a small screen.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.SearchWithTags(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Get market information and tags for the markets that meet the search criteria. Leave the query string empty to return all markets and tags available to the user.
            </summary>
            <param name="query">The text to search for. Matches part of market name / code from the start. *(Optional)*.</param>
            <param name="tagId">The ID for the tag to be searched. *(Optional)*.</param>
            <param name="searchByMarketCode">Sets the search to use market code.</param>
            <param name="searchByMarketName">Sets the search to use market Name.</param>
            <param name="spreadProductType">Sets the search to include spread bet markets.</param>
            <param name="cfdProductType">Sets the search to include CFD markets.</param>
            <param name="binaryProductType">Sets the search to include binary markets.</param>
            <param name="includeOptions">When set to true, the search captures and returns options markets. When set to false, options markets are excluded from the search results.</param>
            <param name="maxResults">The maximum number of results to return. Default is 20.</param>
            <param name="useMobileShortName">True if the market name should be in short form. Helpful when displaying data on a small screen.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginSearchWithTags(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get market information and tags for the markets that meet the search criteria. Leave the query string empty to return all markets and tags available to the user.
            </summary>
            <param name="query">The text to search for. Matches part of market name / code from the start. *(Optional)*.</param>
            <param name="tagId">The ID for the tag to be searched. *(Optional)*.</param>
            <param name="searchByMarketCode">Sets the search to use market code.</param>
            <param name="searchByMarketName">Sets the search to use market Name.</param>
            <param name="spreadProductType">Sets the search to include spread bet markets.</param>
            <param name="cfdProductType">Sets the search to include CFD markets.</param>
            <param name="binaryProductType">Sets the search to include binary markets.</param>
            <param name="includeOptions">When set to true, the search captures and returns options markets. When set to false, options markets are excluded from the search results.</param>
            <param name="maxResults">The maximum number of results to return. Default is 20.</param>
            <param name="useMobileShortName">True if the market name should be in short form. Helpful when displaying data on a small screen.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.TagLookup">
            <summary>
            Gets all of the tags that the requesting user is allowed to see. Tags are returned in a primary / secondary hierarchy. There are no parameters in this call.
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginTagLookup(Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Gets all of the tags that the requesting user is allowed to see. Tags are returned in a primary / secondary hierarchy. There are no parameters in this call.
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.ListMarketInformation(CIAPI.DTO.ListMarketInformationRequestDTO)">
            <summary>
            Get Market Information for the specified list of markets.
            </summary>
            <param name="listMarketInformationRequestDTO">Get Market Information for the specified list of markets.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginListMarketInformation(CIAPI.DTO.ListMarketInformationRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get Market Information for the specified list of markets.
            </summary>
            <param name="listMarketInformationRequestDTO">Get Market Information for the specified list of markets.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.SaveMarketInformation(CIAPI.DTO.SaveMarketInformationRequestDTO)">
            <summary>
            Save Market Information for the specified list of markets.
            </summary>
            <param name="listMarketInformationRequestSaveDTO">Save Market Information for the specified list of markets.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Market.BeginSaveMarketInformation(CIAPI.DTO.SaveMarketInformationRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Save Market Information for the specified list of markets.
            </summary>
            <param name="listMarketInformationRequestSaveDTO">Save Market Information for the specified list of markets.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.Save(CIAPI.DTO.SaveClientPreferenceRequestDTO)">
            <summary>
            Save client preferences.
            </summary>
            <param name="saveClientPreferenceRequestDTO">The client preferences key/value pairs to save.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.BeginSave(CIAPI.DTO.SaveClientPreferenceRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Save client preferences.
            </summary>
            <param name="saveClientPreferenceRequestDTO">The client preferences key/value pairs to save.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.Get(CIAPI.DTO.ClientPreferenceRequestDTO)">
            <summary>
            Get client preferences.
            </summary>
            <param name="clientPreferenceRequestDto">The client preference key to get.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.BeginGet(CIAPI.DTO.ClientPreferenceRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get client preferences.
            </summary>
            <param name="clientPreferenceRequestDto">The client preference key to get.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.GetKeyList">
            <summary>
            Get list of client preferences keys. There are no parameters in this call.
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.BeginGetKeyList(Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Get list of client preferences keys. There are no parameters in this call.
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.Delete(CIAPI.DTO.ClientPreferenceRequestDTO)">
            <summary>
            Delete client preference key.
            </summary>
            <param name="clientPreferenceKey">The client preference key to delete.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Preference.BeginDelete(CIAPI.DTO.ClientPreferenceRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Delete client preference key.
            </summary>
            <param name="clientPreferenceKey">The client preference key to delete.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.Order(CIAPI.DTO.NewStopLimitOrderRequestDTO)">
            <summary>
            Place an order on a particular market. Do not set any order ID fields when requesting a new order, the platform will generate them.
            </summary>
            <param name="order">The order request.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginOrder(CIAPI.DTO.NewStopLimitOrderRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Place an order on a particular market. Do not set any order ID fields when requesting a new order, the platform will generate them.
            </summary>
            <param name="order">The order request.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.CancelOrder(CIAPI.DTO.CancelOrderRequestDTO)">
            <summary>
            Cancel an order.
            </summary>
            <param name="cancelOrder">The cancel order request.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginCancelOrder(CIAPI.DTO.CancelOrderRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Cancel an order.
            </summary>
            <param name="cancelOrder">The cancel order request.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.UpdateOrder(CIAPI.DTO.UpdateStopLimitOrderRequestDTO)">
            <summary>
            Update an order *(for adding a stop/limit or attaching an OCO relationship)*.
            </summary>
            <param name="order">The update order request.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginUpdateOrder(CIAPI.DTO.UpdateStopLimitOrderRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Update an order *(for adding a stop/limit or attaching an OCO relationship)*.
            </summary>
            <param name="order">The update order request.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.ListOpenPositions(System.Int32)">
            <summary>
            Queries for a specified trading account's trades / open positions. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call this for the initial data to display in the grid, and call the HTTP service [GetOpenPosition](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOpenPosition.htm) when you get updates on the order stream to get the updated data in this format. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginListOpenPositions(System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for a specified trading account's trades / open positions. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call this for the initial data to display in the grid, and call the HTTP service [GetOpenPosition](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOpenPosition.htm) when you get updates on the order stream to get the updated data in this format. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.ListActiveStopLimitOrders(System.Int32)">
            <summary>
            Queries for a specified trading account's active stop / limit orders. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call this for the initial data to display in the grid, and call the HTTP service [GetActiveStopLimitOrder](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetActiveStopLimitOrder.htm) when you get updates on the order stream to get the updated data in this format. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginListActiveStopLimitOrders(System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for a specified trading account's active stop / limit orders. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call this for the initial data to display in the grid, and call the HTTP service [GetActiveStopLimitOrder](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetActiveStopLimitOrder.htm) when you get updates on the order stream to get the updated data in this format. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.GetActiveStopLimitOrder(System.String)">
            <summary>
            Queries for an active stop limit order with a specified order ID. It returns a null value if the order doesn't exist, or is not an active stop limit order. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call the HTTP service [ListActiveStopLimitOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveStopLimitOrders.htm) for the initial data to display in the grid, and call this URI when you get updates on the order stream to get the updated data in this format. For a more comprehensive order response, see the HTTP service [GetOrder](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOrder.htm).
            </summary>
            <param name="OrderId">The requested order ID.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginGetActiveStopLimitOrder(System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for an active stop limit order with a specified order ID. It returns a null value if the order doesn't exist, or is not an active stop limit order. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call the HTTP service [ListActiveStopLimitOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveStopLimitOrders.htm) for the initial data to display in the grid, and call this URI when you get updates on the order stream to get the updated data in this format. For a more comprehensive order response, see the HTTP service [GetOrder](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOrder.htm).
            </summary>
            <param name="OrderId">The requested order ID.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.GetOpenPosition(System.String)">
            <summary>
            Queries for a trade / open position with a specified order ID. It returns a null value if the order doesn't exist, or is not a trade / open position. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call the HTTP service [ListOpenPositions](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListOpenPositions.htm) for the initial data to display in the grid, and call this URI when you get updates on the order stream to get the updated data in this format. For a more comprehensive order response, see the HTTP service [GetOrder](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOrder.htm).
            </summary>
            <param name="OrderId">The requested order ID.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginGetOpenPosition(System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for a trade / open position with a specified order ID. It returns a null value if the order doesn't exist, or is not a trade / open position. This URI is intended to support a grid in a UI. One usage pattern is to subscribe to streaming orders, call the HTTP service [ListOpenPositions](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListOpenPositions.htm) for the initial data to display in the grid, and call this URI when you get updates on the order stream to get the updated data in this format. For a more comprehensive order response, see the HTTP service [GetOrder](http://labs.cityindex.com/docs/Content/HTTP%20Services/GetOrder.htm).
            </summary>
            <param name="OrderId">The requested order ID.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.ListTradeHistory(System.Int32,System.Int32)">
            <summary>
            Queries for a specified trading account's trade history. The result set will contain orders with a status of __(3 - Open, 9 - Closed)__, and includes __orders that were a trade / stop / limit order__. There's currently no corresponding GetTradeHistory *(as with [ListOpenPositions](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListOpenPositions.htm))*. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
            <param name="maxResults">The maximum number of results to return.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginListTradeHistory(System.Int32,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for a specified trading account's trade history. The result set will contain orders with a status of __(3 - Open, 9 - Closed)__, and includes __orders that were a trade / stop / limit order__. There's currently no corresponding GetTradeHistory *(as with [ListOpenPositions](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListOpenPositions.htm))*. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.ListStopLimitOrderHistory(System.Int32,System.Int32)">
            <summary>
            Queries for a specified trading account's stop / limit order history. The result set includes __only orders that were originally stop / limit orders__ that currently have one of the following statuses __(3 - Open, 4 - Cancelled, 5 - Rejected, 9 - Closed, 10 - Red Card)__.  There is currently no corresponding GetStopLimitOrderHistory *(as with [ListActiveStopLimitOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveStopLimitOrders.htm))*. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
            <param name="maxResults">The maximum number of results to return.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginListStopLimitOrderHistory(System.Int32,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for a specified trading account's stop / limit order history. The result set includes __only orders that were originally stop / limit orders__ that currently have one of the following statuses __(3 - Open, 4 - Cancelled, 5 - Rejected, 9 - Closed, 10 - Red Card)__.  There is currently no corresponding GetStopLimitOrderHistory *(as with [ListActiveStopLimitOrders](http://labs.cityindex.com/docs/Content/HTTP%20Services/ListActiveStopLimitOrders.htm))*. **Notes on Parameters** >**ClientAccountId** - this can be passed in order to retrieve all information on all trading accounts for which it is the parent. >**TradingAccountId** - this can be passed to retrieve information specific to a certain trading account *(the child of ClientAccount)*.  If *neither* ClientAccountId nor TradingAccountId is passed, then the information returned by default from the API is ClientAccount.
            </summary>
            <param name="TradingAccountId">The ID of the trading account to get orders for.</param>
            <param name="maxResults">The maximum number of results to return.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.GetOrder(System.String)">
            <summary>
            Queries for an order by a specific order ID. The current implementation only returns active orders *(i.e. those with a status of __1 - Pending, 2 - Accepted, 3 - Open, 6 - Suspended, 8 - Yellow Card, 11 - Triggered__)*.
            </summary>
            <param name="OrderId">The requested order ID.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginGetOrder(System.String,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Queries for an order by a specific order ID. The current implementation only returns active orders *(i.e. those with a status of __1 - Pending, 2 - Accepted, 3 - Open, 6 - Suspended, 8 - Yellow Card, 11 - Triggered__)*.
            </summary>
            <param name="OrderId">The requested order ID.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.Trade(CIAPI.DTO.NewTradeOrderRequestDTO)">
            <summary>
            Place a trade on a particular market. Do not set any order ID fields when requesting a new trade, the platform will generate them.
            </summary>
            <param name="trade">The trade request.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginTrade(CIAPI.DTO.NewTradeOrderRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Place a trade on a particular market. Do not set any order ID fields when requesting a new trade, the platform will generate them.
            </summary>
            <param name="trade">The trade request.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.UpdateTrade(CIAPI.DTO.UpdateTradeOrderRequestDTO)">
            <summary>
            Update a trade *(for adding a stop/limit etc)*.
            </summary>
            <param name="update">The update trade request.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginUpdateTrade(CIAPI.DTO.UpdateTradeOrderRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Update a trade *(for adding a stop/limit etc)*.
            </summary>
            <param name="update">The update trade request.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.SimulateTrade(CIAPI.DTO.NewTradeOrderRequestDTO)">
            <summary>
            API call that allows a simulated new trade to be placed.
            </summary>
            <param name="Trade">The simulated trade request.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._TradesAndOrders.BeginSimulateTrade(CIAPI.DTO.NewTradeOrderRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            API call that allows a simulated new trade to be placed.
            </summary>
            <param name="Trade">The simulated trade request.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._AccountInformation.GetClientAndTradingAccount">
            <summary>
            Returns the User's ClientAccountId and a list of their TradingAccounts. There are no parameters for this call.
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client._AccountInformation.BeginGetClientAndTradingAccount(Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Returns the User's ClientAccountId and a list of their TradingAccounts. There are no parameters for this call.
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._AccountInformation.SaveAccountInformation(CIAPI.DTO.ApiSaveAccountInformationRequestDTO)">
            <summary>
            Saves the users account information.
            </summary>
            <param name="saveAccountInformationRequest">Saves the users account information.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._AccountInformation.BeginSaveAccountInformation(CIAPI.DTO.ApiSaveAccountInformationRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Saves the users account information.
            </summary>
            <param name="saveAccountInformationRequest">Saves the users account information.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CIAPI.Rpc.Client._Messaging.GetSystemLookup(System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:CIAPI.Rpc.Client._Messaging.BeginGetSystemLookup(System.String,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)" -->
        <member name="M:CIAPI.Rpc.Client._Messaging.GetClientApplicationMessageTranslation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Use the message translation service to get client specific translated text strings.
            </summary>
            <param name="ClientApplicationId">Client application identifier. *(Optional)*</param>
            <param name="CultureId">Culture ID which corresponds to a culture code. *(Optional)*</param>
            <param name="AccountOperatorId">Account operator identifier. *(Optional)*</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Messaging.BeginGetClientApplicationMessageTranslation(System.Int32,System.Int32,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Use the message translation service to get client specific translated text strings.
            </summary>
            <param name="ClientApplicationId">Client application identifier. *(Optional)*</param>
            <param name="CultureId">Culture ID which corresponds to a culture code. *(Optional)*</param>
            <param name="AccountOperatorId">Account operator identifier. *(Optional)*</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Messaging.GetClientApplicationMessageTranslationWithInterestingItems(CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO)">
            <summary>
            Use the message translation service to get client specific translated textual strings for specific keys.
            </summary>
            <param name="apiClientApplicationMessageTranslationRequestDto">DTO of the required data for translation lookup.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Messaging.BeginGetClientApplicationMessageTranslationWithInterestingItems(CIAPI.DTO.ApiClientApplicationMessageTranslationRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Use the message translation service to get client specific translated textual strings for specific keys.
            </summary>
            <param name="apiClientApplicationMessageTranslationRequestDto">DTO of the required data for translation lookup.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Watchlist.GetWatchlists">
            <summary>
            Gets all watchlists for the user account. There are no parameters for this call.
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client._Watchlist.BeginGetWatchlists(Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Gets all watchlists for the user account. There are no parameters for this call.
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Watchlist.SaveWatchlist(CIAPI.DTO.ApiSaveWatchlistRequestDTO)">
            <summary>
            Save watchlist.
            </summary>
            <param name="apiSaveWatchlistRequestDto">The watchlist to save.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Watchlist.BeginSaveWatchlist(CIAPI.DTO.ApiSaveWatchlistRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Save watchlist.
            </summary>
            <param name="apiSaveWatchlistRequestDto">The watchlist to save.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Watchlist.DeleteWatchlist(CIAPI.DTO.ApiDeleteWatchlistRequestDTO)">
            <summary>
            Delete a watchlist.
            </summary>
            <param name="deleteWatchlistRequestDto">The watchlist to delete.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._Watchlist.BeginDeleteWatchlist(CIAPI.DTO.ApiDeleteWatchlistRequestDTO,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Delete a watchlist.
            </summary>
            <param name="deleteWatchlistRequestDto">The watchlist to delete.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:CIAPI.Rpc.Client._ClientApplication.GetVersionInformation(System.String,System.Int32)">
            <summary>
            Gets version information for a specific client application and *(optionally)* account operator.
            </summary>
            <param name="AppKey">A string to uniquely identify the application.</param>
            <param name="AccountOperatorId">An optional parameter to identify the account operator string to uniquely identify the application.</param>
        </member>
        <member name="M:CIAPI.Rpc.Client._ClientApplication.BeginGetVersionInformation(System.String,System.Int32,Salient.ReliableHttpClient.ReliableAsyncCallback,System.Object)">
            <summary>
            Gets version information for a specific client application and *(optionally)* account operator.
            </summary>
            <param name="AppKey">A string to uniquely identify the application.</param>
            <param name="AccountOperatorId">An optional parameter to identify the account operator string to uniquely identify the application.</param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="T:CIAPI.Rpc.Client.NullObject">
            <summary>
            used as a null target for json deserialization test
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.Client.NullObject.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.PrettyPrinterExtensions">
            <summary>
             Useful logging and debugging extensions
            </summary>
        </member>
        <member name="M:CIAPI.PrettyPrinterExtensions.ToStringWithValues(System.Object)">
            <summary>
             Create string showing values of all public properties for object
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.Rpc.InvalidCredentialsException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InvalidCredentialsException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidCredentialsException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidCredentialsException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidCredentialsException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidCredentialsException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.NullType">
            <summary>
            empty class to enable return of void methods
            </summary>
        </member>
        <member name="T:CIAPI.MagicNumberKeys">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.MagicNumberKeys.ApiOrderResponseDTO_StatusReason">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.MagicNumberKeys.ApiOrderResponseDTO_Status">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.MagicNumberKeys.ApiTradeOrderResponseDTO_StatusReason">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.MagicNumberKeys.ApiTradeOrderResponseDTO_Status">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.MagicNumberKeys.ApiActiveStopLimitOrderDTO_Applicability">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.MagicNumberKeys.ApiOpenPositionDTO_Status">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.MagicNumberResolver">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ListOpenPositionsResponseDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ApiOpenPositionDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ApiActiveStopLimitOrderDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ApiTradeOrderResponseDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ApiOrderResponseDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ApiSimulateTradeOrderResponseDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.ApiSimulateOrderResponseDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumbers(CIAPI.DTO.GetOpenPositionResponseDTO)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.#ctor(CIAPI.Rpc.Client)">
            <summary>
            
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.ResolveMagicNumber(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.MagicNumberResolver.PreloadMagicNumbers">
            <summary>
            
            </summary>
            <exception cref="T:CIAPI.Rpc.AggregateException"></exception>
        </member>
        <member name="T:CIAPI.Rpc.MetricsRecorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.MetricsRecorder.#ctor(CIAPI.Rpc.Client,System.Uri,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="client"></param>
            <param name="appmetricsUri"></param>
            <param name="metricsSession"></param>
            <param name="metricsAccessKey"></param>
        </member>
        <member name="M:CIAPI.Rpc.MetricsRecorder.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.MetricsRecorder.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:CIAPI.Rpc.MetricsRecorder.AppmetricsUri">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Rpc.AggregateException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.AggregateException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.AggregateException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.AggregateException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.AggregateException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.AggregateException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.AggregateException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
            <returns>
            A string representation of the current exception.
            </returns>
            <filterpriority>1</filterpriority><PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/></PermissionSet>
        </member>
        <member name="P:CIAPI.Rpc.AggregateException.Exceptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Rpc.ThrottlingException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.ThrottlingException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.ThrottlingException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.ThrottlingException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.ThrottlingException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.NoDataAvailableException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.NoDataAvailableException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.NoDataAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.NoDataAvailableException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.NoDataAvailableException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.NoDataAvailableException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.InvalidSessionException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InvalidSessionException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidSessionException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidSessionException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidSessionException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidSessionException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.InvalidJsonRequestCaseFormatException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestCaseFormatException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestCaseFormatException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestCaseFormatException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestCaseFormatException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestCaseFormatException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.InvalidJsonRequestException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidJsonRequestException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.InvalidParameterValueException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterValueException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterValueException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.ParameterMissingException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.ParameterMissingException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.ParameterMissingException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.ParameterMissingException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.ParameterMissingException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.ParameterMissingException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.InvalidParameterTypeException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterTypeException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterTypeException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterTypeException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterTypeException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InvalidParameterTypeException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.InternalServerErrorException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.InternalServerErrorException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.InternalServerErrorException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.InternalServerErrorException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.ForbiddenException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.ForbiddenException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CIAPI.Rpc.ForbiddenException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.ForbiddenException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:CIAPI.Rpc.ForbiddenException.#ctor(System.String,Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:CIAPI.Rpc.ForbiddenException.#ctor(Salient.ReliableHttpClient.ReliableHttpException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:CIAPI.Rpc.ServerConnectionException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Rpc.ServerConnectionException.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="responseText"></param>
        </member>
        <member name="T:CIAPI.StreamingClient.IMessageConverter`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CIAPI.StreamingClient.IMessageConverter`1.Convert(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.StreamingClient.InvalidTopicException">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.InvalidTopicException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:CIAPI.StreamingClient.Lightstreamer.HttpUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.HttpUtility.UrlEncode(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.HttpUtility.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="enc"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.Streaming.IStreamingClientFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClientFactory.Create(System.Uri,System.String,System.String,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.IStreamingClientFactory.Create(System.Uri,System.String,System.String,System.Boolean,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="usePolling"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.StreamingClient.Lightstreamer.LightstreamerDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.Lightstreamer.LightstreamerDefaults.DEFAULT_TIMEOUT_MS">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1">
            <summary>
            
            </summary>
            <typeparam name="TDto"></typeparam>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.#ctor(Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.Convert(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.GetFieldList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.GetFieldIndex(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="fieldPropertyInfo"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.IsTypeNullable(System.Type,System.Type@)">
            <summary>
            public for testing - too lazy to show internals
            </summary>
            <param name="type"></param>
            <param name="underlyingType"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.ConvertPropertyValue(System.Type,System.String,System.String)">
            <summary>
            public for testing - too lazy to show internals
            </summary>
            <param name="pType"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.PopulateProperty(`0,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dto"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:CIAPI.StreamingClient.Lightstreamer.LightstreamerDtoConverter`1.DtoPropertyNames">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.LightStreamerStreamingClientFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.LightStreamerStreamingClientFactory.Create(System.Uri,System.String,System.String,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.LightStreamerStreamingClientFactory.Create(System.Uri,System.String,System.String,System.Boolean,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="usePolling"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.StreamingClient.ConnectionStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Disconnected">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Connecting">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Connected">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Streaming">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Polling">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Stalled">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.StreamingClient.ConnectionStatus.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.ConnectionStatusEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.ConnectionStatusEventArgs.#ctor(System.String,CIAPI.StreamingClient.ConnectionStatus)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.ConnectionStatusEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:CIAPI.StreamingClient.ConnectionStatusEventArgs.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.ConnectionStatusEventArgs.Status">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.CheckPhase(System.Int32)">
            <summary>
            
            </summary>
            <param name="ph"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.TearDownListener(CIAPI.StreamingClient.IStreamingListener)">
            <summary>
            Allows consumer to stop and remove a listener from this client.
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.BuildListener``1(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="topic"></param>
            <param name="mode"></param>
            <param name="snapshot"></param>
            <typeparam name="TDto"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.SubscribeTable``1(Lightstreamer.DotNet.Client.SimpleTableInfo,CIAPI.StreamingClient.ITableListener{``0},System.Boolean)">
            <summary>
            
            </summary>
            <param name="simpleTableInfo"></param>
            <param name="listener"></param>
            <param name="b"></param>
            <typeparam name="TDto"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.UnsubscribeTable(Lightstreamer.DotNet.Client.SubscribedTableKey)">
            <summary>
            
            </summary>
            <param name="subscribedTableKey"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.OpenConnection(System.Int32)">
            <summary>
            
            </summary>
            <param name="phase"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.CloseConnection(System.Int32)">
            <summary>
            
            </summary>
            <param name="phase"></param>
        </member>
        <member name="P:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.AdapterSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.Connected">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.ListenerCount">
            <summary>
            </summary>
        </member>
        <member name="E:CIAPI.StreamingClient.IFaultTolerantLsClientAdapter.StatusUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.FaultTolerantLsClientAdapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.SubscribeTable``1(Lightstreamer.DotNet.Client.SimpleTableInfo,CIAPI.StreamingClient.ITableListener{``0},System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="TDto"></typeparam>
            <param name="simpleTableInfo"></param>
            <param name="listener"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.UnsubscribeTable(Lightstreamer.DotNet.Client.SubscribedTableKey)">
            <summary>
            
            </summary>
            <param name="subscribedTableKey"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.#ctor(System.String,System.String,System.String,System.String,System.Boolean,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="sessionId"></param>
            <param name="adapterSet"></param>
            <param name="usePolling"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.TearDownListener(CIAPI.StreamingClient.IStreamingListener)">
            <summary>
            Allows consumer to stop and remove a listener from this client.
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.BuildListener``1(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="topic"></param>
            <param name="mode"></param>
            <param name="snapshot"></param>
            <typeparam name="TDto"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.PauseAndRetryStartClient(System.Int32,System.Exception)">
            <summary>
            
            </summary>
            <param name="ph"></param>
            <param name="ee"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.CheckPhase(System.Int32)">
            <summary>
            helps insure that operations are only performed on active connection/listener
            </summary>
            <param name="ph"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.AdapterSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.Connected">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.ListenerCount">
            <summary>
            </summary>
        </member>
        <member name="E:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.StatusUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.FaultTolerantLsClientAdapter.ClientStartStop">
            <summary>
            nested class to provide access to private members
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.IStreamingListener">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.IStreamingListener.Start(System.Int32)">
            <summary>
            
            </summary>
            <param name="phase"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.IStreamingListener.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.IStreamingListener.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.IStreamingListener.Adapter">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.IStreamingListener`1">
            <summary>
            
            </summary>
            <typeparam name="TDto"></typeparam>
        </member>
        <member name="E:CIAPI.StreamingClient.IStreamingListener`1.MessageReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.ListenerAdapter`1">
            <summary>
            the purpose of this adapter is to allow consumer to maintain handlers
            for listener events even when the internal listener is reinstantiated due
            to fault tolerance events
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.ListenerAdapter`1.#ctor(System.String,System.String,System.Boolean,CIAPI.StreamingClient.IFaultTolerantLsClientAdapter,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="topic"></param>
            <param name="mode"></param>
            <param name="snapshot"></param>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:CIAPI.StreamingClient.ListenerAdapter`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:CIAPI.StreamingClient.ListenerAdapter`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:CIAPI.StreamingClient.ListenerAdapter`1.AdapterSet">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.ListenerAdapter`1.Adapter">
            <summary>
            
            </summary>
        </member>
        <member name="E:CIAPI.StreamingClient.ListenerAdapter`1.MessageReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.ListenerAdapter`1.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.StreamingClient.MessageEventArgs`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CIAPI.StreamingClient.MessageEventArgs`1.#ctor(System.String,System.String,`0,System.Int32)">
            <summary>
            
            </summary>
            <param name="dataAdapter"></param>
            <param name="topic"></param>
            <param name="messageData"></param>
            <param name="phase"></param>
        </member>
        <member name="P:CIAPI.StreamingClient.MessageEventArgs`1.DataAdapter">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.MessageEventArgs`1.Phase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.MessageEventArgs`1.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.MessageEventArgs`1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.StreamingMessageFinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.StreamingMessageFinder.FindExact``1(System.String,System.String,System.Collections.Generic.IEnumerable{CIAPI.StreamingClient.MessageEventArgs{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TDTO"></typeparam>
            <param name="adapter"></param>
            <param name="topic"></param>
            <param name="messages"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.Streaming.StreamingRecorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder.#ctor(CIAPI.StreamingClient.IStreamingListener)">
            <summary>
            
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder.Create``1(CIAPI.StreamingClient.IStreamingListener{``0})">
            <summary>
            
            </summary>
            <typeparam name="TDTO"></typeparam>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="P:CIAPI.Streaming.StreamingRecorder.Paused">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.StreamingRecorder`1">
            <summary>
            
            </summary>
            <typeparam name="TDTO"></typeparam>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder`1.#ctor(CIAPI.StreamingClient.IStreamingListener{`0})">
            <summary>
            
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder`1.GetMessages">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder`1.ClearMessages">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder`1.ListenerMessageReceived(System.Object,CIAPI.StreamingClient.MessageEventArgs{`0})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CIAPI.Streaming.StreamingRecorder`1.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:CIAPI.StreamingClient.ITableListener`1">
            <summary>
            
            </summary>
            <typeparam name="TDto"></typeparam>
        </member>
        <member name="E:CIAPI.StreamingClient.ITableListener`1.MessageReceived">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.StreamingClient.TableListener`1.IsUpdateNull(Lightstreamer.DotNet.Client.IUpdateInfo)">
            <summary>
            It seems some streams have a 'spin-up' process that can return an all null update
            until the data starts streaming. We were not catching this and null updates were
            sometimes throwing exceptions that were logged and then swallowed by LS. I think
            a better way is to determine if the update is emtpy (null) and simply not fire if so.
            
            Follows is a very simple check
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.StreamingClient.StatusEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.StreamingClient.StatusEventArgs.Status">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.Testing.SequentialSerializedPriceDTOMessageGenerator">
            <summary>
            this class will cycle through matching messages and deliver them sequentially
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.SequentialSerializedPriceDTOMessageGenerator.Populate(CIAPI.DTO.PriceDTO,CIAPI.DTO.PriceDTO)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="source"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.SequentialSerializedPriceDTOMessageGenerator.#ctor(System.Collections.Generic.List{CIAPI.StreamingClient.MessageEventArgs{CIAPI.DTO.PriceDTO}})">
            <summary>
            
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.SequentialSerializedPriceDTOMessageGenerator.GetNextMessage(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <param name="topic"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:CIAPI.Streaming.Testing.TestStreamingClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.#ctor(System.Uri,System.String,System.String,Salient.ReliableHttpClient.Serialization.IJsonSerializer,CIAPI.Streaming.Testing.TestStreamingClientFactory)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="serializer"></param>
            <param name="testStreamingClientFactory"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.OnStatusChanged(System.Object,CIAPI.StreamingClient.StatusEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildListener``1(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="dataAdapter"></param>
            <param name="topic"></param>
            <typeparam name="TDto"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.TearDownListener(CIAPI.StreamingClient.IStreamingListener)">
            <summary>
            Allows consumer to stop and remove a listener from this client.
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildNewsHeadlinesListener(System.String)">
            <summary>
            
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildPricesListener(System.Int32[])">
            <summary>
            
            </summary>
            <param name="marketIds"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildQuotesListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildClientAccountMarginListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildOrdersListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildDefaultPricesListener(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountOperatorId"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.BuildTradeMarginListener">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClient.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="E:CIAPI.Streaming.Testing.TestStreamingClient.StatusChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.Testing.TestStreamingClientFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingClientFactory.CreateNewsMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingClientFactory.CreatePriceMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingClientFactory.CreateQuoteMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingClientFactory.CreateClientAccountMarginMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingClientFactory.CreateOrderMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingClientFactory.CreateTradeMarginMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClientFactory.Create(System.Uri,System.String,System.String,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingClientFactory.Create(System.Uri,System.String,System.String,System.Boolean,Salient.ReliableHttpClient.Serialization.IJsonSerializer)">
            <summary>
            
            </summary>
            <param name="streamingUri"></param>
            <param name="userName"></param>
            <param name="session"></param>
            <param name="usePolling"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:CIAPI.Streaming.Testing.TestStreamingListener">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <param name="topic"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener.Start(System.Int32)">
            <summary>
            
            </summary>
            <param name="phase"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener.TimerCallback(System.Object)">
            <summary>
            
            </summary>
            <param name="ignored"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:CIAPI.Streaming.Testing.TestStreamingListener.Adapter">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.Streaming.Testing.TestStreamingListener.Phase">
            <summary>
            
            </summary>
        </member>
        <member name="P:CIAPI.Streaming.Testing.TestStreamingListener.Topic">
            <summary>
            
            </summary>
        </member>
        <member name="T:CIAPI.Streaming.Testing.TestStreamingListener`1">
            <summary>
            
            </summary>
            <typeparam name="TDTO"></typeparam>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener`1.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="adapter"></param>
            <param name="topic"></param>
        </member>
        <member name="M:CIAPI.Streaming.Testing.TestStreamingListener`1.TimerCallback(System.Object)">
            <summary>
            
            </summary>
            <param name="ignored"></param>
        </member>
        <member name="F:CIAPI.Streaming.Testing.TestStreamingListener`1.CreateMessage">
            <summary>
            
            </summary>
        </member>
        <member name="E:CIAPI.Streaming.Testing.TestStreamingListener`1.MessageReceived">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
